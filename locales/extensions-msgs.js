// GENERATED FILE:
export default {
  "en": {
    "arduinoEsp32.InterrupModeMenu.changeEdge": "change edge",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoEsp32.InterrupModeMenu.high": "high level",
    "arduinoEsp32.InterrupModeMenu.low": "low level",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoEsp32.category.data": "Data",
    "arduinoEsp32.category.pins": "Pins",
    "arduinoEsp32.category.serial": "Serial",
    "arduinoEsp32.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoEsp32.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoEsp32.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "decimal",
    "arduinoEsp32.dataTypeMenu.integer": "integer",
    "arduinoEsp32.dataTypeMenu.string": "string",
    "arduinoEsp32.eolMenu.noWarp": "no-warp",
    "arduinoEsp32.eolMenu.warp": "warp",
    "arduinoEsp32.levelMenu.high": "high",
    "arduinoEsp32.levelMenu.low": "low",
    "arduinoEsp32.modeMenu.input": "input",
    "arduinoEsp32.modeMenu.inputPulldown": "input-pulldown",
    "arduinoEsp32.modeMenu.inputPullup": "input-pullup",
    "arduinoEsp32.modeMenu.output": "output",
    "arduinoEsp32.pins.esp32AttachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoEsp32.pins.esp32DetachInterrupt": "detach interrupt pin [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "read touch pin [PIN]",
    "arduinoEsp32.pins.esp32SetDACOutput": "set dac pin [PIN] out [OUT]",
    "arduinoEsp32.pins.esp32SetPwmOutput": "set pwm pin [PIN] use channel [CH] out [OUT]",
    "arduinoEsp32.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoEsp32.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoEsp32.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoEsp32.pins.setServoOutput": "set servo pin [PIN] use channel [CH] out [OUT]",
    "arduinoEsp32.serial.multiSerialAvailable": "serial [NO] available data length",
    "arduinoEsp32.serial.multiSerialBegin": "serial [NO] begin baudrate [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "serial [NO] print [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "serial [NO] read a byte",
    "arduinoEsp8266.InterrupModeMenu.changeEdge": "change edge",
    "arduinoEsp8266.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoEsp8266.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoEsp8266.category.data": "Data",
    "arduinoEsp8266.category.pins": "Pins",
    "arduinoEsp8266.category.serial": "Serial",
    "arduinoEsp8266.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoEsp8266.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoEsp8266.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoEsp8266.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoEsp8266.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoEsp8266.dataTypeMenu.decimal": "decimal",
    "arduinoEsp8266.dataTypeMenu.integer": "integer",
    "arduinoEsp8266.dataTypeMenu.string": "string",
    "arduinoEsp8266.eolMenu.noWarp": "no-warp",
    "arduinoEsp8266.eolMenu.warp": "warp",
    "arduinoEsp8266.levelMenu.high": "high",
    "arduinoEsp8266.levelMenu.low": "low",
    "arduinoEsp8266.modeMenu.input": "input",
    "arduinoEsp8266.modeMenu.inputPullup": "input-pullup",
    "arduinoEsp8266.modeMenu.output": "output",
    "arduinoEsp8266.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoEsp8266.pins.esp8266AttachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoEsp8266.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoEsp8266.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoEsp8266.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoEsp8266.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoEsp8266.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoEsp8266.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoEsp8266.serial.serialAvailable": "serial available data length",
    "arduinoEsp8266.serial.serialBegin": "serial begin baudrate [VALUE]",
    "arduinoEsp8266.serial.serialPrint": "serial print [VALUE] [EOL]",
    "arduinoEsp8266.serial.serialReadAByte": "serial read a byte",
    "arduinoK210.InterrupModeMenu.changeEdge": "change edge",
    "arduinoK210.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoK210.InterrupModeMenu.high": "high level",
    "arduinoK210.InterrupModeMenu.low": "low level",
    "arduinoK210.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoK210.category.data": "Data",
    "arduinoK210.category.pins": "Pins",
    "arduinoK210.category.serial": "Serial",
    "arduinoK210.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoK210.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoK210.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoK210.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoK210.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoK210.dataTypeMenu.decimal": "decimal",
    "arduinoK210.dataTypeMenu.integer": "integer",
    "arduinoK210.dataTypeMenu.string": "string",
    "arduinoK210.eolMenu.noWarp": "no-warp",
    "arduinoK210.eolMenu.warp": "warp",
    "arduinoK210.levelMenu.high": "high",
    "arduinoK210.levelMenu.low": "low",
    "arduinoK210.modeMenu.input": "input",
    "arduinoK210.modeMenu.inputPulldown": "input-pulldown",
    "arduinoK210.modeMenu.inputPullup": "input-pullup",
    "arduinoK210.modeMenu.output": "output",
    "arduinoK210.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoK210.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoK210.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoK210.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoK210.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoK210.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoK210.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoK210.serial.multiSerialAvailable": "serial [NO] available data length",
    "arduinoK210.serial.multiSerialBegin": "serial [NO] begin baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "arduinoK210.serial.multiSerialPrint": "serial [NO] print [VALUE] [EOL]",
    "arduinoK210.serial.multiSerialReadAByte": "serial [NO] read a byte",
    "arduinoLeonardo.InterrupModeMenu.changeEdge": "change edge",
    "arduinoLeonardo.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoLeonardo.InterrupModeMenu.low": "low",
    "arduinoLeonardo.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoLeonardo.category.data": "Data",
    "arduinoLeonardo.category.pins": "Pins",
    "arduinoLeonardo.category.serial": "Serial",
    "arduinoLeonardo.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoLeonardo.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoLeonardo.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "decimal",
    "arduinoLeonardo.dataTypeMenu.integer": "integer",
    "arduinoLeonardo.dataTypeMenu.string": "string",
    "arduinoLeonardo.eolMenu.noWarp": "no-warp",
    "arduinoLeonardo.eolMenu.warp": "warp",
    "arduinoLeonardo.levelMenu.high": "high",
    "arduinoLeonardo.levelMenu.low": "low",
    "arduinoLeonardo.modeMenu.input": "input",
    "arduinoLeonardo.modeMenu.inputPullup": "input-pullup",
    "arduinoLeonardo.modeMenu.output": "output",
    "arduinoLeonardo.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoLeonardo.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoLeonardo.serial.serialAvailable": "serial available data length",
    "arduinoLeonardo.serial.serialBegin": "serial begin baudrate [VALUE]",
    "arduinoLeonardo.serial.serialPrint": "serial print [VALUE] [EOL]",
    "arduinoLeonardo.serial.serialReadAByte": "serial read a byte",
    "arduinoMega2560.InterrupModeMenu.changeEdge": "change edge",
    "arduinoMega2560.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoMega2560.InterrupModeMenu.low": "low",
    "arduinoMega2560.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoMega2560.category.data": "Data",
    "arduinoMega2560.category.pins": "Pins",
    "arduinoMega2560.category.serial": "Serial",
    "arduinoMega2560.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoMega2560.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoMega2560.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "decimal",
    "arduinoMega2560.dataTypeMenu.integer": "integer",
    "arduinoMega2560.dataTypeMenu.string": "string",
    "arduinoMega2560.eolMenu.noWarp": "no-warp",
    "arduinoMega2560.eolMenu.warp": "warp",
    "arduinoMega2560.levelMenu.high": "high",
    "arduinoMega2560.levelMenu.low": "low",
    "arduinoMega2560.modeMenu.input": "input",
    "arduinoMega2560.modeMenu.inputPullup": "input-pullup",
    "arduinoMega2560.modeMenu.output": "output",
    "arduinoMega2560.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoMega2560.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoMega2560.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "serial [NO] available data length",
    "arduinoMega2560.serial.multiSerialBegin": "serial [NO] begin baudrate [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "serial [NO] print [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "serial [NO] read a byte",
    "arduinoPeripheral.connection.connectFirmataTimeout": "Timeout when try to connect firmata, please download the firmware first",
    "arduinoRaspberryPiPico.InterrupModeMenu.changeEdge": "change edge",
    "arduinoRaspberryPiPico.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoRaspberryPiPico.InterrupModeMenu.high": "high level",
    "arduinoRaspberryPiPico.InterrupModeMenu.low": "low level",
    "arduinoRaspberryPiPico.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoRaspberryPiPico.category.data": "Data",
    "arduinoRaspberryPiPico.category.pins": "Pins",
    "arduinoRaspberryPiPico.category.serial": "Serial",
    "arduinoRaspberryPiPico.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoRaspberryPiPico.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoRaspberryPiPico.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoRaspberryPiPico.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoRaspberryPiPico.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoRaspberryPiPico.dataTypeMenu.decimal": "decimal",
    "arduinoRaspberryPiPico.dataTypeMenu.integer": "integer",
    "arduinoRaspberryPiPico.dataTypeMenu.string": "string",
    "arduinoRaspberryPiPico.eolMenu.noWarp": "no-warp",
    "arduinoRaspberryPiPico.eolMenu.warp": "warp",
    "arduinoRaspberryPiPico.levelMenu.high": "high",
    "arduinoRaspberryPiPico.levelMenu.low": "low",
    "arduinoRaspberryPiPico.modeMenu.input": "input",
    "arduinoRaspberryPiPico.modeMenu.inputPulldown": "input-pulldown",
    "arduinoRaspberryPiPico.modeMenu.inputPullup": "input-pullup",
    "arduinoRaspberryPiPico.modeMenu.output": "output",
    "arduinoRaspberryPiPico.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoRaspberryPiPico.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoRaspberryPiPico.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoRaspberryPiPico.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoRaspberryPiPico.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoRaspberryPiPico.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoRaspberryPiPico.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoRaspberryPiPico.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoRaspberryPiPico.serial.multiSerialAvailable": "serial [NO] available data length",
    "arduinoRaspberryPiPico.serial.multiSerialPrint": "serial [NO] print [VALUE] [EOL]",
    "arduinoRaspberryPiPico.serial.multiSerialReadAByte": "serial [NO] read a byte",
    "arduinoRaspberryPiPico.serial.raspberryPiPicoMultiSerialBegin": "serial [NO] begin baudrate [VALUE]",
    "arduinoUno.InterrupModeMenu.changeEdge": "change edge",
    "arduinoUno.InterrupModeMenu.fallingEdge": "falling edge",
    "arduinoUno.InterrupModeMenu.low": "low",
    "arduinoUno.InterrupModeMenu.risingEdge": "rising edge",
    "arduinoUno.category.data": "Data",
    "arduinoUno.category.pins": "Pins",
    "arduinoUno.category.serial": "Serial",
    "arduinoUno.data.dataConstrain": "constrain [DATA] between ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "convert [DATA] to [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "convert [DATA] to ASCII character",
    "arduinoUno.data.dataConvertASCIINumber": "convert [DATA] to ASCII nubmer",
    "arduinoUno.data.dataMap": "map [DATA] from ([ARG0], [ARG1]) to ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "decimal",
    "arduinoUno.dataTypeMenu.integer": "integer",
    "arduinoUno.dataTypeMenu.string": "string",
    "arduinoUno.eolMenu.noWarp": "no-warp",
    "arduinoUno.eolMenu.warp": "warp",
    "arduinoUno.levelMenu.high": "high",
    "arduinoUno.levelMenu.low": "low",
    "arduinoUno.modeMenu.input": "input",
    "arduinoUno.modeMenu.inputPullup": "input-pullup",
    "arduinoUno.modeMenu.output": "output",
    "arduinoUno.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "arduinoUno.pins.detachInterrupt": "detach interrupt pin [PIN]",
    "arduinoUno.pins.readAnalogPin": "read analog pin [PIN]",
    "arduinoUno.pins.readDigitalPin": "read digital pin [PIN]",
    "arduinoUno.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "arduinoUno.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "arduinoUno.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "arduinoUno.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "arduinoUno.serial.serialAvailable": "serial available data length",
    "arduinoUno.serial.serialBegin": "serial begin baudrate [VALUE]",
    "arduinoUno.serial.serialPrint": "serial print [VALUE] [EOL]",
    "arduinoUno.serial.serialReadAByte": "serial read a byte",
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microPythonEsp32.InterrupModeMenu.changeEdge": "change edge",
    "microPythonEsp32.InterrupModeMenu.fallingEdge": "falling edge",
    "microPythonEsp32.InterrupModeMenu.high": "high level",
    "microPythonEsp32.InterrupModeMenu.low": "low level",
    "microPythonEsp32.InterrupModeMenu.risingEdge": "rising edge",
    "microPythonEsp32.category.console": "Console",
    "microPythonEsp32.category.pins": "Pins",
    "microPythonEsp32.console.consoleInput": "prompt [TEXT] and read input",
    "microPythonEsp32.console.consolePrint": "print [TEXT] [EOL]",
    "microPythonEsp32.eolMenu.noWarp": "no-warp",
    "microPythonEsp32.eolMenu.warp": "warp",
    "microPythonEsp32.levelMenu.high": "high",
    "microPythonEsp32.levelMenu.low": "low",
    "microPythonEsp32.modeMenu.input": "input",
    "microPythonEsp32.modeMenu.inputPulldown": "input-pulldown",
    "microPythonEsp32.modeMenu.inputPullup": "input-pullup",
    "microPythonEsp32.modeMenu.output": "output",
    "microPythonEsp32.pins.esp32AttachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "microPythonEsp32.pins.esp32ReadAnalogPin": "read analog pin [PIN]",
    "microPythonEsp32.pins.esp32ReadDigitalPin": "read digital pin [PIN]",
    "microPythonEsp32.pins.esp32ReadTouchPin": "read touch pin [PIN]",
    "microPythonEsp32.pins.esp32SetDACOutput": "set dac pin [PIN] out [OUT]",
    "microPythonEsp32.pins.esp32SetDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "microPythonEsp32.pins.esp32SetPinMode": "set pin [PIN] mode [MODE]",
    "microPythonEsp32.pins.esp32SetPwmOutput": "set pwm pin [PIN] out [OUT]",
    "microPythonEsp32.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "microPythonEsp8266.category.console": "Console",
    "microPythonEsp8266.category.pins": "Pins",
    "microPythonEsp8266.console.consoleInput": "prompt [TEXT] and read input",
    "microPythonEsp8266.console.consolePrint": "print [TEXT] [EOL]",
    "microPythonEsp8266.eolMenu.noWarp": "no-warp",
    "microPythonEsp8266.eolMenu.warp": "warp",
    "microPythonEsp8266.levelMenu.high": "high",
    "microPythonEsp8266.levelMenu.low": "low",
    "microPythonEsp8266.modeMenu.input": "input",
    "microPythonEsp8266.modeMenu.inputPullup": "input-pullup",
    "microPythonEsp8266.modeMenu.output": "output",
    "microPythonEsp8266.pins.esp8266AttachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "microPythonEsp8266.pins.readAnalogPin": "read analog pin [PIN]",
    "microPythonEsp8266.pins.readDigitalPin": "read digital pin [PIN]",
    "microPythonEsp8266.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "microPythonEsp8266.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "microPythonEsp8266.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "microPythonEsp8266.pins.setServoOutput": "set servo pin [PIN] out [OUT]",
    "microPythonK210.InterrupModeMenu.changeEdge": "change edge",
    "microPythonK210.InterrupModeMenu.fallingEdge": "falling edge",
    "microPythonK210.InterrupModeMenu.risingEdge": "rising edge",
    "microPythonK210.category.console": "Console",
    "microPythonK210.category.pins": "Pins",
    "microPythonK210.category.serial": "Serial",
    "microPythonK210.console.consoleInput": "prompt [TEXT] and read input",
    "microPythonK210.console.consolePrint": "print [TEXT] [EOL]",
    "microPythonK210.eolMenu.noWarp": "no-warp",
    "microPythonK210.eolMenu.warp": "warp",
    "microPythonK210.levelMenu.high": "high",
    "microPythonK210.levelMenu.low": "low",
    "microPythonK210.modeMenu.input": "input",
    "microPythonK210.modeMenu.inputPulldown": "input-pulldown",
    "microPythonK210.modeMenu.inputPullup": "input-pullup",
    "microPythonK210.modeMenu.output": "output",
    "microPythonK210.pins.k210AttachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "microPythonK210.pins.k210SetPinMode": "set pin [PIN] mode [MODE]",
    "microPythonK210.pins.k210SetPwmOutput": "set pwm pin [PIN] use channel [CH] out [OUT]",
    "microPythonK210.pins.k210SetServoOutput": "set servo pin [PIN] use channel [CH] out [OUT]",
    "microPythonK210.pins.readDigitalPin": "read digital pin [PIN]",
    "microPythonK210.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "microPythonK210.serial.k210SerialBegin": "serial [NO] begin baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "microPythonK210.serial.serialPrint": "serial [NO] print [VALUE] [EOL]",
    "microPythonK210.serial.serialReadALine": "serial [NO] read a line",
    "microPythonRaspberryPiPico.InterrupModeMenu.changeEdge": "change edge",
    "microPythonRaspberryPiPico.InterrupModeMenu.fallingEdge": "falling edge",
    "microPythonRaspberryPiPico.InterrupModeMenu.risingEdge": "rising edge",
    "microPythonRaspberryPiPico.category.console": "Console",
    "microPythonRaspberryPiPico.category.pins": "Pins",
    "microPythonRaspberryPiPico.category.serial": "Serial",
    "microPythonRaspberryPiPico.console.consoleInput": "prompt [TEXT] and read input",
    "microPythonRaspberryPiPico.console.consolePrint": "print [TEXT] [EOL]",
    "microPythonRaspberryPiPico.eolMenu.noWarp": "no-warp",
    "microPythonRaspberryPiPico.eolMenu.warp": "warp",
    "microPythonRaspberryPiPico.levelMenu.high": "high",
    "microPythonRaspberryPiPico.levelMenu.low": "low",
    "microPythonRaspberryPiPico.modeMenu.input": "input",
    "microPythonRaspberryPiPico.modeMenu.inputPulldown": "input-pulldown",
    "microPythonRaspberryPiPico.modeMenu.inputPullup": "input-pullup",
    "microPythonRaspberryPiPico.modeMenu.output": "output",
    "microPythonRaspberryPiPico.pins.attachInterrupt": "attach interrupt pin [PIN] mode [MODE] executes",
    "microPythonRaspberryPiPico.pins.readAnalogPin": "read analog pin [PIN]",
    "microPythonRaspberryPiPico.pins.readDigitalPin": "read digital pin [PIN]",
    "microPythonRaspberryPiPico.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "microPythonRaspberryPiPico.pins.setPinMode": "set pin [PIN] mode [MODE]",
    "microPythonRaspberryPiPico.pins.setPwmOutputU16": "set pwm pin [PIN] out [OUT]",
    "microPythonRaspberryPiPico.pins.setServoOutputU16": "set servo pin [PIN] out [OUT]",
    "microPythonRaspberryPiPico.serial.multiSerialPrint": "serial [NO] print [VALUE] [EOL]",
    "microPythonRaspberryPiPico.serial.multiSerialReadALine": "serial [NO] read a line",
    "microPythonRaspberryPiPico.serial.raspberryPiPicoSerialBegin": "serial [NO] begin baudrate [BAUD] pin RX [RX_PIN] TX [TX_PIN]",
    "microbit.axisMenu.xAxis": "x-axis",
    "microbit.axisMenu.yAxis": "y-axis",
    "microbit.axisMenu.zAxis": "z-axis",
    "microbit.buttonsMenu.any": "any",
    "microbit.category.console": "Console",
    "microbit.category.display": "Display",
    "microbit.category.pins": "Pins",
    "microbit.category.sensor": "Sensor",
    "microbit.category.wireless": "Wireless",
    "microbit.clearDisplay": "clear display",
    "microbit.console.consolePrint": "print [TEXT]",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.display.clearDisplay": "clear screen",
    "microbit.display.lightPixelAt": "light [STATE] at the x: [X] axis, y: [Y] axis",
    "microbit.display.show": "show [TEXT]",
    "microbit.display.showImage": "show image [VALUE]",
    "microbit.display.showImageUntil": "show image [VALUE] for [TIME] secs",
    "microbit.display.showOnPiexlbrightness": "show on the x: [X] axis, y: [Y] axis with brightness [BRT]",
    "microbit.display.showUntilScrollDone": "show [TEXT] until scroll done",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gestruesMenu.faceDown": "face down",
    "microbit.gestruesMenu.faceUp": "face up",
    "microbit.gestruesMenu.freefall": "freefall",
    "microbit.gestruesMenu.shaken": "shaken",
    "microbit.gestruesMenu.tiltedDownward": "tilted downward",
    "microbit.gestruesMenu.tiltedLeftward": "tilted leftward",
    "microbit.gestruesMenu.tiltedRightward": "tilted rightward",
    "microbit.gestruesMenu.tiltedUpward": "tilted upward",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.ledState.off": "off",
    "microbit.ledState.on": "on",
    "microbit.levelMenu.high": "high",
    "microbit.levelMenu.low": "low",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.pins.pinIsTouched": "pin [PIN] is touched",
    "microbit.pins.readAnalogPin": "read analog pin [PIN]",
    "microbit.pins.readDigitalPin": "read digital pin [PIN]",
    "microbit.pins.setDigitalOutput": "set digital pin [PIN] out [LEVEL]",
    "microbit.pins.setPwmOutput": "set pwm pin [PIN] out [OUT]",
    "microbit.sensor.axisAcceleration": "[AXIS] axis acceleration",
    "microbit.sensor.buttonIsPressed": "[KEY] button is pressed?",
    "microbit.sensor.calibrateCompass": "calibrate compass",
    "microbit.sensor.compassAngle": "compass angle",
    "microbit.sensor.compassMagneticDensity": "compass magnetic density",
    "microbit.sensor.gestureIsX": "gestrue is [STA]?",
    "microbit.sensor.lightLevel": "light level",
    "microbit.sensor.runningTime": "running time",
    "microbit.sensor.temperature": "temperature",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "microbit.wireless.closeWirelessCommunication": "close wireless communication",
    "microbit.wireless.openWirelessCommunication": "open wireless communication",
    "microbit.wireless.receiveWirelessMessage": "receive wireless message",
    "microbit.wireless.resetWirelessCommunication": "reset wireless communication",
    "microbit.wireless.sendWirelessMessage": "send wireless message [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "set wireless communication channel as [CH]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let''s go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]"
  },
  "ru": {
    "arduinoEsp32.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoEsp32.InterrupModeMenu.high": "Высокий уровень",
    "arduinoEsp32.InterrupModeMenu.low": "Низкий уровень",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoEsp32.category.data": "Данные",
    "arduinoEsp32.category.pins": "Пины",
    "arduinoEsp32.category.serial": "Последовательный порт",
    "arduinoEsp32.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoEsp32.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoEsp32.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "десятичное",
    "arduinoEsp32.dataTypeMenu.integer": "целое",
    "arduinoEsp32.dataTypeMenu.string": "строка",
    "arduinoEsp32.eolMenu.noWarp": "не переносить",
    "arduinoEsp32.eolMenu.warp": "перенос",
    "arduinoEsp32.levelMenu.high": "высокий",
    "arduinoEsp32.levelMenu.low": "низкий",
    "arduinoEsp32.modeMenu.input": "ввод",
    "arduinoEsp32.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "arduinoEsp32.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoEsp32.modeMenu.output": "вывод",
    "arduinoEsp32.pins.esp32AttachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoEsp32.pins.esp32DetachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "читать сенсорный пин [PIN]",
    "arduinoEsp32.pins.esp32SetDACOutput": "установить ЦАП пин [PIN] в [OUT]",
    "arduinoEsp32.pins.esp32SetPwmOutput": "установить ШИМ пин [PIN] на канале [CH] на выходе [OUT]",
    "arduinoEsp32.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoEsp32.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoEsp32.pins.setPinMode": "установить пин [PIN] в режим [MODE]",
    "arduinoEsp32.pins.setServoOutput": "установить серво пин [PIN] на канале [CH] на выход [OUT]",
    "arduinoEsp32.serial.multiSerialAvailable": "Последовательного порта [NO] доступная длина данных",
    "arduinoEsp32.serial.multiSerialBegin": "Последовательного порта [NO] начальная скорость [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "В последовательный порт  [NO] печатать [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "Из последовательного порта [NO] прочитать байт",
    "arduinoEsp8266.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoEsp8266.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoEsp8266.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoEsp8266.category.data": "Данные",
    "arduinoEsp8266.category.pins": "Пины",
    "arduinoEsp8266.category.serial": "Последовательный порт",
    "arduinoEsp8266.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoEsp8266.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoEsp8266.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoEsp8266.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoEsp8266.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoEsp8266.dataTypeMenu.decimal": "десятичное",
    "arduinoEsp8266.dataTypeMenu.integer": "целое",
    "arduinoEsp8266.dataTypeMenu.string": "строка",
    "arduinoEsp8266.eolMenu.noWarp": "не переносить",
    "arduinoEsp8266.eolMenu.warp": "перенос",
    "arduinoEsp8266.levelMenu.high": "высокий",
    "arduinoEsp8266.levelMenu.low": "низкий",
    "arduinoEsp8266.modeMenu.input": "ввод",
    "arduinoEsp8266.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoEsp8266.modeMenu.output": "вывод",
    "arduinoEsp8266.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoEsp8266.pins.esp8266AttachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoEsp8266.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoEsp8266.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoEsp8266.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoEsp8266.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoEsp8266.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoEsp8266.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoEsp8266.serial.serialAvailable": "доступная длина данных последовательного порта",
    "arduinoEsp8266.serial.serialBegin": "скорость последовательного порта [VALUE]",
    "arduinoEsp8266.serial.serialPrint": "В последовательный порт печатать [VALUE] [EOL]\n ",
    "arduinoEsp8266.serial.serialReadAByte": "Из последовательного порта прочитать байт",
    "arduinoK210.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoK210.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoK210.InterrupModeMenu.high": "Высокий уровень",
    "arduinoK210.InterrupModeMenu.low": "Низкий уровень",
    "arduinoK210.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoK210.category.data": "Данные",
    "arduinoK210.category.pins": "Пины",
    "arduinoK210.category.serial": "Серийный",
    "arduinoK210.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoK210.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoK210.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoK210.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoK210.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoK210.dataTypeMenu.decimal": "десятичное",
    "arduinoK210.dataTypeMenu.integer": "целое",
    "arduinoK210.dataTypeMenu.string": "строка",
    "arduinoK210.eolMenu.noWarp": "не переносить",
    "arduinoK210.eolMenu.warp": "перенос",
    "arduinoK210.levelMenu.high": "высокий",
    "arduinoK210.levelMenu.low": "низкий",
    "arduinoK210.modeMenu.input": "ввод",
    "arduinoK210.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "arduinoK210.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoK210.modeMenu.output": "вывод",
    "arduinoK210.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoK210.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoK210.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoK210.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoK210.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoK210.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoK210.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoK210.serial.multiSerialAvailable": "серийный [NO] доступная длина данных",
    "arduinoK210.serial.multiSerialBegin": "Последовательного порта [NO] начать со скоростью передачи данных  [BAUD] пины RX [RX_PIN] TX [TX_PIN]\n ",
    "arduinoK210.serial.multiSerialPrint": "серийный номер [NO] печать [VALUE] [EOL]",
    "arduinoK210.serial.multiSerialReadAByte": "серийный номер [NO] прочитать байт",
    "arduinoLeonardo.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoLeonardo.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoLeonardo.InterrupModeMenu.low": "низкий",
    "arduinoLeonardo.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoLeonardo.category.data": "Данные",
    "arduinoLeonardo.category.pins": "Пины",
    "arduinoLeonardo.category.serial": "Серийный",
    "arduinoLeonardo.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoLeonardo.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoLeonardo.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "десятичное",
    "arduinoLeonardo.dataTypeMenu.integer": "целое",
    "arduinoLeonardo.dataTypeMenu.string": "строка",
    "arduinoLeonardo.eolMenu.noWarp": "не переносить",
    "arduinoLeonardo.eolMenu.warp": "перенос",
    "arduinoLeonardo.levelMenu.high": "высокий",
    "arduinoLeonardo.levelMenu.low": "низкий",
    "arduinoLeonardo.modeMenu.input": "ввод",
    "arduinoLeonardo.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoLeonardo.modeMenu.output": "вывод",
    "arduinoLeonardo.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoLeonardo.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoLeonardo.serial.serialAvailable": "доступная длина данных серийного порта",
    "arduinoLeonardo.serial.serialBegin": "скорость последовательного порта [VALUE]",
    "arduinoLeonardo.serial.serialPrint": "В последовательный порт печатать [VALUE] [EOL]\n ",
    "arduinoLeonardo.serial.serialReadAByte": "Из последовательного порта прочитать байт",
    "arduinoMega2560.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoMega2560.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoMega2560.InterrupModeMenu.low": "низкий",
    "arduinoMega2560.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoMega2560.category.data": "Данные",
    "arduinoMega2560.category.pins": "Пины",
    "arduinoMega2560.category.serial": "Серийный",
    "arduinoMega2560.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoMega2560.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoMega2560.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "десятичное",
    "arduinoMega2560.dataTypeMenu.integer": "целое",
    "arduinoMega2560.dataTypeMenu.string": "строка",
    "arduinoMega2560.eolMenu.noWarp": "не переносить",
    "arduinoMega2560.eolMenu.warp": "перенос",
    "arduinoMega2560.levelMenu.high": "высокий",
    "arduinoMega2560.levelMenu.low": "низкий",
    "arduinoMega2560.modeMenu.input": "ввод",
    "arduinoMega2560.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoMega2560.modeMenu.output": "вывод",
    "arduinoMega2560.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoMega2560.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoMega2560.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "серийный [NO] доступная длина данных",
    "arduinoMega2560.serial.multiSerialBegin": "серийный номер [NO] начальная скорость [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "серийный номер [NO] печать [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "серийный номер [NO] прочитать байт",
    "arduinoPeripheral.connection.connectFirmataTimeout": "Тайм-аут при попытке подключения Firmata, сначала загрузите прошивку",
    "arduinoRaspberryPiPico.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoRaspberryPiPico.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoRaspberryPiPico.InterrupModeMenu.high": "Высокий уровень",
    "arduinoRaspberryPiPico.InterrupModeMenu.low": "Низкий уровень",
    "arduinoRaspberryPiPico.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoRaspberryPiPico.category.data": "Данные",
    "arduinoRaspberryPiPico.category.pins": "Пины",
    "arduinoRaspberryPiPico.category.serial": "Серийный",
    "arduinoRaspberryPiPico.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoRaspberryPiPico.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoRaspberryPiPico.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoRaspberryPiPico.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoRaspberryPiPico.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoRaspberryPiPico.dataTypeMenu.decimal": "десятичное",
    "arduinoRaspberryPiPico.dataTypeMenu.integer": "целое",
    "arduinoRaspberryPiPico.dataTypeMenu.string": "строка",
    "arduinoRaspberryPiPico.eolMenu.noWarp": "не переносить",
    "arduinoRaspberryPiPico.eolMenu.warp": "перенос",
    "arduinoRaspberryPiPico.levelMenu.high": "высокий",
    "arduinoRaspberryPiPico.levelMenu.low": "низкий",
    "arduinoRaspberryPiPico.modeMenu.input": "ввод",
    "arduinoRaspberryPiPico.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "arduinoRaspberryPiPico.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoRaspberryPiPico.modeMenu.output": "вывод",
    "arduinoRaspberryPiPico.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoRaspberryPiPico.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoRaspberryPiPico.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoRaspberryPiPico.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoRaspberryPiPico.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoRaspberryPiPico.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoRaspberryPiPico.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoRaspberryPiPico.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoRaspberryPiPico.serial.multiSerialAvailable": "серийный [NO] доступная длина данных",
    "arduinoRaspberryPiPico.serial.multiSerialPrint": "серийный номер [NO] печать [VALUE] [EOL]",
    "arduinoRaspberryPiPico.serial.multiSerialReadAByte": "серийный номер [NO] прочитать байт",
    "arduinoRaspberryPiPico.serial.raspberryPiPicoMultiSerialBegin": "серийный номер [NO] начальная скорость [VALUE]",
    "arduinoUno.InterrupModeMenu.changeEdge": "Изменить край",
    "arduinoUno.InterrupModeMenu.fallingEdge": "падающий край",
    "arduinoUno.InterrupModeMenu.low": "низкий",
    "arduinoUno.InterrupModeMenu.risingEdge": "поднимающийся край",
    "arduinoUno.category.data": "Данные",
    "arduinoUno.category.pins": "Пины",
    "arduinoUno.category.serial": "Серийный",
    "arduinoUno.data.dataConstrain": "ограничить [DATA] между ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "преобразовать [DATA] в [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "преобразовать [DATA] в символ ASCII",
    "arduinoUno.data.dataConvertASCIINumber": "преобразовать [DATA] в число ASCII",
    "arduinoUno.data.dataMap": "сопоставить [DATA] с ([ARG0], [ARG1]) на ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "десятичное",
    "arduinoUno.dataTypeMenu.integer": "целое",
    "arduinoUno.dataTypeMenu.string": "строка",
    "arduinoUno.eolMenu.noWarp": "не переносить",
    "arduinoUno.eolMenu.warp": "перенос",
    "arduinoUno.levelMenu.high": "высокий",
    "arduinoUno.levelMenu.low": "низкий",
    "arduinoUno.modeMenu.input": "ввод",
    "arduinoUno.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "arduinoUno.modeMenu.output": "вывод",
    "arduinoUno.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "arduinoUno.pins.detachInterrupt": "отсоединить контакт прерывания [PIN]",
    "arduinoUno.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "arduinoUno.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "arduinoUno.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "arduinoUno.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "arduinoUno.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "arduinoUno.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "arduinoUno.serial.serialAvailable": "доступная длина данных серийного порта",
    "arduinoUno.serial.serialBegin": "скорость последовательного порта [VALUE]",
    "arduinoUno.serial.serialPrint": "В последовательный порт печатать [VALUE] [EOL]\n ",
    "arduinoUno.serial.serialReadAByte": "Из последовательного порта прочитать байт",
    "boost.color.any": "любой цвет",
    "boost.color.black": "черный",
    "boost.color.blue": "синий",
    "boost.color.green": "зеленый",
    "boost.color.red": "красный",
    "boost.color.white": "белый",
    "boost.color.yellow": "желтый",
    "boost.getMotorPosition": "позиция мотора [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "угол наклона [TILT_DIRECTION]",
    "boost.motorDirection.backward": "туда",
    "boost.motorDirection.forward": "сюда",
    "boost.motorDirection.reverse": "изменить направление",
    "boost.motorOff": "выключить мотор [MOTOR_ID]",
    "boost.motorOn": "включить мотор [MOTOR_ID]",
    "boost.motorOnFor": "включить мотор [MOTOR_ID] на [DURATION] секунд",
    "boost.motorOnForRotation": "включить мотор [MOTOR_ID] на [ROTATION] оборотов",
    "boost.seeingColor": "виден [COLOR] кирпич?",
    "boost.setLightHue": "установить цвет лампочки [HUE]",
    "boost.setMotorDirection": "установить направление мотора [MOTOR_ID] в [MOTOR_DIRECTION]",
    "boost.setMotorPower": "установить скорость [MOTOR_ID] в [POWER] %",
    "boost.tiltDirection.any": "любая",
    "boost.tiltDirection.down": "вниз",
    "boost.tiltDirection.left": "налево",
    "boost.tiltDirection.right": "направо",
    "boost.tiltDirection.up": "вверх",
    "boost.whenColor": "когда виден [COLOR] кирпич",
    "boost.whenTilted": "когда наклонён [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "играть ноту [NOTE] [TIME] секунд",
    "ev3.buttonPressed": "кнопка [PORT] нажата?",
    "ev3.getBrightness": "яркость",
    "ev3.getDistance": "расстояние",
    "ev3.getMotorPosition": "позиция мотора [PORT]",
    "ev3.motorSetPower": "мотор [PORT] установить мощность [POWER] %",
    "ev3.motorTurnClockwise": "мотор [PORT] повернуть сюда на [TIME] секунд",
    "ev3.motorTurnCounterClockwise": "мотор [PORT] повернуть туда на [TIME] секунд",
    "ev3.whenBrightnessLessThan": "когда яркость < [DISTANCE]",
    "ev3.whenButtonPressed": "когда кнопка [PORT] нажата",
    "ev3.whenDistanceLessThan": "когда расстояние < [DISTANCE]",
    "gdxfor.getAcceleration": "ускорение [DIRECTION]",
    "gdxfor.getForce": "сила",
    "gdxfor.getSpin": "скорость вращения [DIRECTION]",
    "gdxfor.getTilt": "угол наклона [TILT]",
    "gdxfor.isFreeFalling": "падение?",
    "gdxfor.isTilted": "наклонён [TILT]?",
    "gdxfor.pulled": "вытянут",
    "gdxfor.pushed": "нажат",
    "gdxfor.shaken": "встряхнут",
    "gdxfor.startedFalling": "начал падать",
    "gdxfor.tiltDirectionMenu.any": "любая",
    "gdxfor.tiltDirectionMenu.back": "задний",
    "gdxfor.tiltDirectionMenu.front": "передний",
    "gdxfor.tiltDirectionMenu.left": "левый ",
    "gdxfor.tiltDirectionMenu.right": "правый",
    "gdxfor.turnedFaceDown": "повернут лицом вниз",
    "gdxfor.turnedFaceUp": "повернут лицом вверх",
    "gdxfor.whenForcePushedOrPulled": "когда датчик приложения силы [PUSH_PULL]",
    "gdxfor.whenGesture": "когда [GESTURE]",
    "gdxfor.whenTilted": "когда наклонён [TILT]",
    "makeymakey.downArrow": "стрелка вниз",
    "makeymakey.downArrowShort": "вниз",
    "makeymakey.leftArrow": "стрелка влево",
    "makeymakey.leftArrowShort": "влево",
    "makeymakey.rightArrow": "стрелка вправо",
    "makeymakey.rightArrowShort": "направо",
    "makeymakey.spaceKey": "пробел",
    "makeymakey.upArrow": "стрелка вверх",
    "makeymakey.upArrowShort": "вверх",
    "makeymakey.whenKeyPressed": "когда [KEY] клавиша нажата",
    "makeymakey.whenKeysPressedInOrder": "при нажатии по порядку [SEQUENCE]",
    "microPythonEsp32.InterrupModeMenu.changeEdge": "Изменить край",
    "microPythonEsp32.InterrupModeMenu.fallingEdge": "падающий край",
    "microPythonEsp32.InterrupModeMenu.high": "Высокий уровень",
    "microPythonEsp32.InterrupModeMenu.low": "Низкий уровень",
    "microPythonEsp32.InterrupModeMenu.risingEdge": "поднимающийся край",
    "microPythonEsp32.category.console": "Консоль",
    "microPythonEsp32.category.pins": "Пины",
    "microPythonEsp32.console.consoleInput": "Вывести [TEXT] и прочитать введенные данные\n ",
    "microPythonEsp32.console.consolePrint": "Печатать [TEXT] [EOL]\n ",
    "microPythonEsp32.eolMenu.noWarp": "не переносить",
    "microPythonEsp32.eolMenu.warp": "перенос",
    "microPythonEsp32.levelMenu.high": "высокий",
    "microPythonEsp32.levelMenu.low": "низкий",
    "microPythonEsp32.modeMenu.input": "ввод",
    "microPythonEsp32.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "microPythonEsp32.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "microPythonEsp32.modeMenu.output": "вывод",
    "microPythonEsp32.pins.esp32AttachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "microPythonEsp32.pins.esp32ReadAnalogPin": "читать аналоговый вывод [PIN]",
    "microPythonEsp32.pins.esp32ReadDigitalPin": "читать цифровой пин [PIN]",
    "microPythonEsp32.pins.esp32ReadTouchPin": "читать сенсорный пин [PIN]",
    "microPythonEsp32.pins.esp32SetDACOutput": "установить ШИМ пин [PIN] в [OUT]",
    "microPythonEsp32.pins.esp32SetDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "microPythonEsp32.pins.esp32SetPinMode": "установить пин [PIN] режим [MODE]",
    "microPythonEsp32.pins.esp32SetPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "microPythonEsp32.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "microPythonEsp8266.category.console": "Консоль",
    "microPythonEsp8266.category.pins": "Пины",
    "microPythonEsp8266.console.consoleInput": "Вывести [TEXT] и прочитать введенные данные\n ",
    "microPythonEsp8266.console.consolePrint": "Печатать [TEXT] [EOL]\n ",
    "microPythonEsp8266.eolMenu.noWarp": "не переносить",
    "microPythonEsp8266.eolMenu.warp": "перенос",
    "microPythonEsp8266.levelMenu.high": "высокий",
    "microPythonEsp8266.levelMenu.low": "низкий",
    "microPythonEsp8266.modeMenu.input": "ввод",
    "microPythonEsp8266.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "microPythonEsp8266.modeMenu.output": "вывод",
    "microPythonEsp8266.pins.esp8266AttachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "microPythonEsp8266.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "microPythonEsp8266.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "microPythonEsp8266.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "microPythonEsp8266.pins.setPinMode": "установить пин [PIN] режим [MODE]",
    "microPythonEsp8266.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "microPythonEsp8266.pins.setServoOutput": "установить серво пин [PIN] в [OUT]",
    "microPythonK210.InterrupModeMenu.changeEdge": "Изменить край",
    "microPythonK210.InterrupModeMenu.fallingEdge": "падающий край",
    "microPythonK210.InterrupModeMenu.risingEdge": "поднимающийся край",
    "microPythonK210.category.console": "Консоль",
    "microPythonK210.category.pins": "Пины",
    "microPythonK210.category.serial": "Серийный",
    "microPythonK210.console.consoleInput": "Вывести [TEXT] и прочитать введенные данные\n ",
    "microPythonK210.console.consolePrint": "Печатать [TEXT] [EOL]\n ",
    "microPythonK210.eolMenu.noWarp": "не переносить",
    "microPythonK210.eolMenu.warp": "перенос",
    "microPythonK210.levelMenu.high": "высокий",
    "microPythonK210.levelMenu.low": "низкий",
    "microPythonK210.modeMenu.input": "ввод",
    "microPythonK210.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "microPythonK210.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "microPythonK210.modeMenu.output": "вывод",
    "microPythonK210.pins.k210AttachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "microPythonK210.pins.k210SetPinMode": "установить пин [PIN] режим [MODE]",
    "microPythonK210.pins.k210SetPwmOutput": "установить ШИМ пин [PIN] на канале [CH] на выходе [OUT]",
    "microPythonK210.pins.k210SetServoOutput": "установить серво пин [PIN] на канале [CH] на выход [OUT]",
    "microPythonK210.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "microPythonK210.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "microPythonK210.serial.k210SerialBegin": "Последовательного порта [NO] начать со скоростью передачи данных  [BAUD] пины RX [RX_PIN] TX [TX_PIN]\n ",
    "microPythonK210.serial.serialPrint": "серийный номер [NO] печать [VALUE] [EOL]",
    "microPythonK210.serial.serialReadALine": "В последовательном порту [NO] прочитать строку\n ",
    "microPythonRaspberryPiPico.InterrupModeMenu.changeEdge": "Изменить край",
    "microPythonRaspberryPiPico.InterrupModeMenu.fallingEdge": "падающий край",
    "microPythonRaspberryPiPico.InterrupModeMenu.risingEdge": "поднимающийся край",
    "microPythonRaspberryPiPico.category.console": "Консоль",
    "microPythonRaspberryPiPico.category.pins": "Пины",
    "microPythonRaspberryPiPico.category.serial": "Последовательный порт",
    "microPythonRaspberryPiPico.console.consoleInput": "Вывести [TEXT] и прочитать введенные данные\n ",
    "microPythonRaspberryPiPico.console.consolePrint": "Печатать [TEXT] [EOL]\n ",
    "microPythonRaspberryPiPico.eolMenu.noWarp": "не переносить",
    "microPythonRaspberryPiPico.eolMenu.warp": "перенос",
    "microPythonRaspberryPiPico.levelMenu.high": "высокий",
    "microPythonRaspberryPiPico.levelMenu.low": "низкий",
    "microPythonRaspberryPiPico.modeMenu.input": "ввод",
    "microPythonRaspberryPiPico.modeMenu.inputPulldown": "ввод подтягивается к нулю",
    "microPythonRaspberryPiPico.modeMenu.inputPullup": "ввод подтягивается к питанию",
    "microPythonRaspberryPiPico.modeMenu.output": "вывод",
    "microPythonRaspberryPiPico.pins.attachInterrupt": "подключить прерывания на [PIN] в режиме [MODE] и выполнить",
    "microPythonRaspberryPiPico.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "microPythonRaspberryPiPico.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "microPythonRaspberryPiPico.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "microPythonRaspberryPiPico.pins.setPinMode": "установить пин [PIN] в режим [MODE]",
    "microPythonRaspberryPiPico.pins.setPwmOutputU16": "установить ШИМ пин [PIN] в [OUT]",
    "microPythonRaspberryPiPico.pins.setServoOutputU16": "установить серво пин [PIN] в [OUT]",
    "microPythonRaspberryPiPico.serial.multiSerialPrint": "В последовательный порт  [NO] печатать [VALUE] [EOL]",
    "microPythonRaspberryPiPico.serial.multiSerialReadALine": "В последовательном порту [NO] прочитать строку\n ",
    "microPythonRaspberryPiPico.serial.raspberryPiPicoSerialBegin": "Последовательного порта [NO] начать со скоростью передачи данных  [BAUD] пины RX [RX_PIN] TX [TX_PIN]\n ",
    "microbit.axisMenu.xAxis": "ось X",
    "microbit.axisMenu.yAxis": "ось Y",
    "microbit.axisMenu.zAxis": "ось Z",
    "microbit.buttonsMenu.any": "любой из",
    "microbit.category.console": "Консоль",
    "microbit.category.display": "Дисплей",
    "microbit.category.pins": "Пины",
    "microbit.category.sensor": "Сенсор",
    "microbit.category.wireless": "Беспроводной",
    "microbit.clearDisplay": "очистить дисплей",
    "microbit.console.consolePrint": "Печатать [TEXT]\n ",
    "microbit.defaultTextToDisplay": "Привет!",
    "microbit.display.clearDisplay": "Очистить экран",
    "microbit.display.lightPixelAt": "свет [STATE] на x: ось [X], y: ось [Y]",
    "microbit.display.show": "Показать [TEXT]\n ",
    "microbit.display.showImage": "Показать изображение [VALUE]\n ",
    "microbit.display.showImageUntil": "Показать изображение [VALUE] на [TIME] сек\n ",
    "microbit.display.showOnPiexlbrightness": "Показать в точке x: [X] axis, y: [Y] axis с яркостью [BRT]\n ",
    "microbit.display.showUntilScrollDone": "показывать [TEXT] до завершения прокрутки",
    "microbit.displaySymbol": "отобразить [MATRIX]",
    "microbit.displayText": "показать текст [TEXT]",
    "microbit.gestruesMenu.faceDown": "лицо вниз",
    "microbit.gestruesMenu.faceUp": "лицо вверх",
    "microbit.gestruesMenu.freefall": "свободное падение",
    "microbit.gestruesMenu.shaken": "когда трясут",
    "microbit.gestruesMenu.tiltedDownward": "наклон вниз",
    "microbit.gestruesMenu.tiltedLeftward": "наклон налево",
    "microbit.gestruesMenu.tiltedRightward": "наклон направо",
    "microbit.gestruesMenu.tiltedUpward": "наклон вверх",
    "microbit.gesturesMenu.jumped": "подпрыгнули",
    "microbit.gesturesMenu.moved": "передвинулись",
    "microbit.gesturesMenu.shaken": "встряхнули",
    "microbit.isButtonPressed": "[BTN] кнопка нажата?",
    "microbit.isTilted": "наклонён [DIRECTION]?",
    "microbit.ledState.off": "выключить",
    "microbit.ledState.on": "включить",
    "microbit.levelMenu.high": "высокий",
    "microbit.levelMenu.low": "низкий",
    "microbit.pinStateMenu.off": "выключить",
    "microbit.pinStateMenu.on": "включить",
    "microbit.pins.pinIsTouched": "Коснулся пина [PIN]",
    "microbit.pins.readAnalogPin": "читать аналоговый вывод [PIN]",
    "microbit.pins.readDigitalPin": "читать цифровой пин [PIN]",
    "microbit.pins.setDigitalOutput": "установить цифровой пин [PIN] на [LEVEL]",
    "microbit.pins.setPwmOutput": "установить ШИМ пин [PIN] в [OUT]",
    "microbit.sensor.axisAcceleration": "Ускорение по оси [AXIS]",
    "microbit.sensor.buttonIsPressed": "Клавиша [KEY] нажата?",
    "microbit.sensor.calibrateCompass": "Калибровать компас",
    "microbit.sensor.compassAngle": "Компас показывает направление ",
    "microbit.sensor.compassMagneticDensity": "Плотность магнитного потока компаса",
    "microbit.sensor.gestureIsX": "Жест [STA]?",
    "microbit.sensor.lightLevel": "Уровень яркости",
    "microbit.sensor.runningTime": "Время работы",
    "microbit.sensor.temperature": "Температура",
    "microbit.tiltAngle": "угол наклона [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "любой из",
    "microbit.tiltDirectionMenu.back": "назад",
    "microbit.tiltDirectionMenu.front": "вперёд",
    "microbit.tiltDirectionMenu.left": "влево",
    "microbit.tiltDirectionMenu.right": "направо",
    "microbit.whenButtonPressed": "когда [BTN] кнопка нажата",
    "microbit.whenGesture": "когда [GESTURE]",
    "microbit.whenPinConnected": "когда подключён пин [PIN]",
    "microbit.whenTilted": "когда наклонён [DIRECTION]",
    "microbit.wireless.closeWirelessCommunication": "Отключить беспроводное соединение",
    "microbit.wireless.openWirelessCommunication": "Включить беспроводное соединение",
    "microbit.wireless.receiveWirelessMessage": "Получить беспроводное сообщение",
    "microbit.wireless.resetWirelessCommunication": "Перезагрузить беспроводное соединение",
    "microbit.wireless.sendWirelessMessage": "Отправить беспроводное сообщение  [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "Установить беспроводной канал на  [CH]",
    "music.categoryName": "Музыка",
    "music.changeTempo": "изменить темп на [TEMPO]",
    "music.drumBass": "(2) Большой барабан",
    "music.drumBongo": "(13) Бонго",
    "music.drumCabasa": "(15) Кабаса",
    "music.drumClaves": "(9) Клаве",
    "music.drumClosedHiHat": "(16) Закрытый Хай-Хэт",
    "music.drumConga": "(14) Конга",
    "music.drumCowbell": "(11) Ковбелл",
    "music.drumCrashCymbal": "(4) Крэш-тарелка",
    "music.drumCuica": "(18) Куика",
    "music.drumGuiro": "(16) Гуиро",
    "music.drumHandClap": "(8) Хлопок",
    "music.drumOpenHiHat": "(5) Открытый Хай-Хет",
    "music.drumSideStick": "(3) Римшот",
    "music.drumSnare": "(1) Малый барабан",
    "music.drumTambourine": "(7) Бубен",
    "music.drumTriangle": "(12) Треугольник",
    "music.drumVibraslap": "(17) Вибраслэп",
    "music.drumWoodBlock": "(10) Коробочка",
    "music.getTempo": "темп",
    "music.instrumentBass": "(6) Бас",
    "music.instrumentBassoon": "(14) Фагот",
    "music.instrumentCello": "(8) Виолончель",
    "music.instrumentChoir": "(15) Хор",
    "music.instrumentClarinet": "(10) Кларнет",
    "music.instrumentElectricGuitar": "(5) Электрогитара",
    "music.instrumentElectricPiano": "(2) Электрическое пианино",
    "music.instrumentFlute": "(12) Флейта",
    "music.instrumentGuitar": "(4) Гитара",
    "music.instrumentMarimba": "(19) Маримба",
    "music.instrumentMusicBox": "(17) Музыкальная шкатулка",
    "music.instrumentOrgan": "(3) Орган",
    "music.instrumentPiano": "(1) Фортепиано",
    "music.instrumentPizzicato": "(7) Пиццикато",
    "music.instrumentSaxophone": "(11) Саксофон",
    "music.instrumentSteelDrum": "(18) Стальной барабан",
    "music.instrumentSynthLead": "(20) Ведущий синтезатор",
    "music.instrumentSynthPad": "(21) Синтезатор с функциями драм-машины",
    "music.instrumentTrombone": "(9) Тромбон",
    "music.instrumentVibraphone": "(16) Вибрафон",
    "music.instrumentWoodenFlute": "(13) Деревянная флейта",
    "music.midiPlayDrumForBeats": "барабану играть [DRUM]  [BEATS] бита",
    "music.midiSetInstrument": "изменить инструмент на [INSTRUMENT]",
    "music.playDrumForBeats": "барабану играть [DRUM]  [BEATS] бита",
    "music.playNoteForBeats": "играй ноту [NOTE] [BEATS] бита",
    "music.restForBeats": "пауза в течение [BEATS] бит",
    "music.setInstrument": "изменить инструмент на [INSTRUMENT]",
    "music.setTempo": "установить темп [TEMPO]",
    "pen.categoryName": "Перо",
    "pen.changeColorParam": "изменить [COLOR_PARAM] пера на [VALUE]",
    "pen.changeHue": "изменить цвет пера на [HUE]",
    "pen.changeShade": "изменить оттенок пера на [SHADE]",
    "pen.changeSize": "изменить размер пера на [SIZE]",
    "pen.clear": "стереть всё",
    "pen.colorMenu.brightness": "яркость",
    "pen.colorMenu.color": "цвет",
    "pen.colorMenu.saturation": "насыщенность",
    "pen.colorMenu.transparency": "прозрачность",
    "pen.penDown": "опустить перо",
    "pen.penUp": "поднять перо",
    "pen.setColor": "установить для пера цвет [COLOR]",
    "pen.setColorParam": "установить [COLOR_PARAM] пера [VALUE]",
    "pen.setHue": "установить цвет пера [HUE]",
    "pen.setShade": "установить оттенок пера [SHADE]",
    "pen.setSize": "установить размер пера [SIZE]",
    "pen.stamp": "печать",
    "speech.defaultWhenIHearValue": "начать движение",
    "speech.extensionName": "Речь в Текст",
    "speech.listenAndWait": "слушать и ждать",
    "speech.speechReporter": "речь",
    "speech.whenIHear": "когда я слышу [PHRASE]",
    "text2speech.alto": "альт",
    "text2speech.categoryName": "Текст в речь",
    "text2speech.defaultTextToSpeak": "привет",
    "text2speech.giant": "гигант",
    "text2speech.kitten": "котенок",
    "text2speech.setLanguageBlock": "установить [LANGUAGE] язык",
    "text2speech.setVoiceBlock": "установить [VOICE] голос",
    "text2speech.speakAndWaitBlock": "сказать [WORDS] ",
    "text2speech.squeak": "писк",
    "text2speech.tenor": "тенор",
    "translate.categoryName": "Перевести",
    "translate.defaultTextToTranslate": "привет",
    "translate.translateBlock": "перевести [WORDS] на [LANGUAGE]",
    "translate.viewerLanguage": "язык",
    "videoSensing.categoryName": "Видео Распознавание",
    "videoSensing.direction": "направление",
    "videoSensing.motion": "движение",
    "videoSensing.off": "выключить",
    "videoSensing.on": "включить",
    "videoSensing.onFlipped": "включить в обратную",
    "videoSensing.setVideoTransparency": "установить прозрачность видео  [TRANSPARENCY]",
    "videoSensing.sprite": "спрайт",
    "videoSensing.stage": "сцена",
    "videoSensing.videoOn": "видео [ATTRIBUTE]  на [SUBJECT]",
    "videoSensing.videoToggle": "включить видео [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "когда скорость видео > [REFERENCE]",
    "wedo2.getDistance": "расстояние",
    "wedo2.getTiltAngle": "угол наклона[TILT_DIRECTION]",
    "wedo2.isTilted": "наклонён [TILT_DIRECTION_ANY] ?",
    "wedo2.motorDirection.backward": "туда",
    "wedo2.motorDirection.forward": "сюда",
    "wedo2.motorDirection.reverse": "изменить направление",
    "wedo2.motorId.a": "мотор A",
    "wedo2.motorId.all": "все моторы",
    "wedo2.motorId.b": "мотор B",
    "wedo2.motorId.default": "мотор",
    "wedo2.motorOff": "выключить [MOTOR_ID]",
    "wedo2.motorOn": "включить [MOTOR_ID]",
    "wedo2.motorOnFor": "включить [MOTOR_ID] на [DURATION] секунд",
    "wedo2.playNoteFor": "играть ноту [NOTE] [DURATION] секунд",
    "wedo2.setLightHue": "установить цвет лампочки [HUE]",
    "wedo2.setMotorDirection": "установить направление [MOTOR_ID] в [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "установить мощность [MOTOR_ID] в [POWER]",
    "wedo2.tiltDirection.any": "любая",
    "wedo2.tiltDirection.down": "вниз",
    "wedo2.tiltDirection.left": "влево",
    "wedo2.tiltDirection.right": "направо",
    "wedo2.tiltDirection.up": "вверх",
    "wedo2.whenDistance": "когда расстояние [OP] [REFERENCE]",
    "wedo2.whenTilted": "когда наклонён [TILT_DIRECTION_ANY]"
  },
  "zh-cn": {
    "arduinoEsp32.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoEsp32.InterrupModeMenu.high": "高电平",
    "arduinoEsp32.InterrupModeMenu.low": "低电平",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoEsp32.category.data": "数据",
    "arduinoEsp32.category.pins": "引脚",
    "arduinoEsp32.category.serial": "串口",
    "arduinoEsp32.data.dataConstrain": "约束 [DATA] 介于 ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoEsp32.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoEsp32.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "小数",
    "arduinoEsp32.dataTypeMenu.integer": "整数",
    "arduinoEsp32.dataTypeMenu.string": "字符串",
    "arduinoEsp32.eolMenu.noWarp": "不换行",
    "arduinoEsp32.eolMenu.warp": "换行",
    "arduinoEsp32.levelMenu.high": "高",
    "arduinoEsp32.levelMenu.low": "低",
    "arduinoEsp32.modeMenu.input": "输入",
    "arduinoEsp32.modeMenu.inputPulldown": "输入下拉",
    "arduinoEsp32.modeMenu.inputPullup": "输入上拉",
    "arduinoEsp32.modeMenu.output": "输出",
    "arduinoEsp32.pins.esp32AttachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoEsp32.pins.esp32DetachInterrupt": "取消中断引脚 [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "读取触摸引脚 [PIN]",
    "arduinoEsp32.pins.esp32SetDACOutput": "设置 dac 引脚 [PIN] 输出 [OUT]",
    "arduinoEsp32.pins.esp32SetPwmOutput": "设置 pwm 引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "arduinoEsp32.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoEsp32.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "arduinoEsp32.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoEsp32.pins.setServoOutput": "设置舵机引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "arduinoEsp32.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoEsp32.serial.multiSerialBegin": "串口 [NO] 启动波特率  [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoEsp8266.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoEsp8266.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoEsp8266.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoEsp8266.category.data": "数据",
    "arduinoEsp8266.category.pins": "引脚",
    "arduinoEsp8266.category.serial": "串口",
    "arduinoEsp8266.data.dataConstrain": "约束 [DATA] 介于 ([ARG0], [ARG1])",
    "arduinoEsp8266.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoEsp8266.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoEsp8266.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoEsp8266.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoEsp8266.dataTypeMenu.decimal": "小数",
    "arduinoEsp8266.dataTypeMenu.integer": "整数",
    "arduinoEsp8266.dataTypeMenu.string": "字符串",
    "arduinoEsp8266.eolMenu.noWarp": "不换行",
    "arduinoEsp8266.eolMenu.warp": "换行",
    "arduinoEsp8266.levelMenu.high": "高",
    "arduinoEsp8266.levelMenu.low": "低",
    "arduinoEsp8266.modeMenu.input": "输入",
    "arduinoEsp8266.modeMenu.inputPullup": "输入上拉",
    "arduinoEsp8266.modeMenu.output": "输出",
    "arduinoEsp8266.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoEsp8266.pins.esp8266AttachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoEsp8266.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoEsp8266.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoEsp8266.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "arduinoEsp8266.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoEsp8266.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoEsp8266.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoEsp8266.serial.serialAvailable": "串口可读取字节数",
    "arduinoEsp8266.serial.serialBegin": "串口启动波特率  [VALUE]",
    "arduinoEsp8266.serial.serialPrint": "串口打印 [VALUE] [EOL]",
    "arduinoEsp8266.serial.serialReadAByte": "串口读取1个字节",
    "arduinoK210.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoK210.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoK210.InterrupModeMenu.high": "高电平",
    "arduinoK210.InterrupModeMenu.low": "低电平",
    "arduinoK210.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoK210.category.data": "数据",
    "arduinoK210.category.pins": "引脚",
    "arduinoK210.category.serial": "串口",
    "arduinoK210.data.dataConstrain": "约束 [DATA] 介于 ([ARG0], [ARG1])",
    "arduinoK210.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoK210.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoK210.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoK210.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoK210.dataTypeMenu.decimal": "小数",
    "arduinoK210.dataTypeMenu.integer": "整数",
    "arduinoK210.dataTypeMenu.string": "字符串",
    "arduinoK210.eolMenu.noWarp": "不换行",
    "arduinoK210.eolMenu.warp": "换行",
    "arduinoK210.levelMenu.high": "高",
    "arduinoK210.levelMenu.low": "低",
    "arduinoK210.modeMenu.input": "输入",
    "arduinoK210.modeMenu.inputPulldown": "输入下拉",
    "arduinoK210.modeMenu.inputPullup": "输入上拉",
    "arduinoK210.modeMenu.output": "输出",
    "arduinoK210.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoK210.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoK210.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoK210.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "arduinoK210.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoK210.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoK210.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoK210.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoK210.serial.multiSerialBegin": "串口 [NO] 启动波特率 [BAUD] 引脚 RX [RX_PIN] TX [TX_PIN]",
    "arduinoK210.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoK210.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoLeonardo.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoLeonardo.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoLeonardo.InterrupModeMenu.low": "低",
    "arduinoLeonardo.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoLeonardo.category.data": "数据",
    "arduinoLeonardo.category.pins": "引脚",
    "arduinoLeonardo.category.serial": "串口",
    "arduinoLeonardo.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoLeonardo.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoLeonardo.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "小数",
    "arduinoLeonardo.dataTypeMenu.integer": "整数",
    "arduinoLeonardo.dataTypeMenu.string": "字符串",
    "arduinoLeonardo.eolMenu.noWarp": "不换行",
    "arduinoLeonardo.eolMenu.warp": "换行",
    "arduinoLeonardo.levelMenu.high": "高",
    "arduinoLeonardo.levelMenu.low": "低",
    "arduinoLeonardo.modeMenu.input": "输入",
    "arduinoLeonardo.modeMenu.inputPullup": "输入上拉",
    "arduinoLeonardo.modeMenu.output": "输出",
    "arduinoLeonardo.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoLeonardo.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoLeonardo.serial.serialAvailable": "串口可读取字节数",
    "arduinoLeonardo.serial.serialBegin": "串口启动波特率  [VALUE]",
    "arduinoLeonardo.serial.serialPrint": "串口打印 [VALUE] [EOL]",
    "arduinoLeonardo.serial.serialReadAByte": "串口读取1个字节",
    "arduinoMega2560.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoMega2560.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoMega2560.InterrupModeMenu.low": "低",
    "arduinoMega2560.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoMega2560.category.data": "数据",
    "arduinoMega2560.category.pins": "引脚",
    "arduinoMega2560.category.serial": "串口",
    "arduinoMega2560.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoMega2560.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoMega2560.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "小数",
    "arduinoMega2560.dataTypeMenu.integer": "整数",
    "arduinoMega2560.dataTypeMenu.string": "字符串",
    "arduinoMega2560.eolMenu.noWarp": "不换行",
    "arduinoMega2560.eolMenu.warp": "换行",
    "arduinoMega2560.levelMenu.high": "高",
    "arduinoMega2560.levelMenu.low": "低",
    "arduinoMega2560.modeMenu.input": "输入",
    "arduinoMega2560.modeMenu.inputPullup": "输入上拉",
    "arduinoMega2560.modeMenu.output": "输出",
    "arduinoMega2560.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoMega2560.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoMega2560.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoMega2560.serial.multiSerialBegin": "串口 [NO] 启动波特率  [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoPeripheral.connection.connectFirmataTimeout": "尝试连接 firmata 超时, 请先下载固件",
    "arduinoRaspberryPiPico.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoRaspberryPiPico.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoRaspberryPiPico.InterrupModeMenu.high": "高电平",
    "arduinoRaspberryPiPico.InterrupModeMenu.low": "低电平",
    "arduinoRaspberryPiPico.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoRaspberryPiPico.category.data": "数据",
    "arduinoRaspberryPiPico.category.pins": "引脚",
    "arduinoRaspberryPiPico.category.serial": "串口",
    "arduinoRaspberryPiPico.data.dataConstrain": "约束 [DATA] 介于 ([ARG0], [ARG1])",
    "arduinoRaspberryPiPico.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoRaspberryPiPico.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoRaspberryPiPico.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoRaspberryPiPico.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoRaspberryPiPico.dataTypeMenu.decimal": "小数",
    "arduinoRaspberryPiPico.dataTypeMenu.integer": "整数",
    "arduinoRaspberryPiPico.dataTypeMenu.string": "字符串",
    "arduinoRaspberryPiPico.eolMenu.noWarp": "不换行",
    "arduinoRaspberryPiPico.eolMenu.warp": "换行",
    "arduinoRaspberryPiPico.levelMenu.high": "高",
    "arduinoRaspberryPiPico.levelMenu.low": "低电平",
    "arduinoRaspberryPiPico.modeMenu.input": "输入",
    "arduinoRaspberryPiPico.modeMenu.inputPulldown": "输入下拉",
    "arduinoRaspberryPiPico.modeMenu.inputPullup": "输入上拉",
    "arduinoRaspberryPiPico.modeMenu.output": "输出",
    "arduinoRaspberryPiPico.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoRaspberryPiPico.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoRaspberryPiPico.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoRaspberryPiPico.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoRaspberryPiPico.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "arduinoRaspberryPiPico.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoRaspberryPiPico.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoRaspberryPiPico.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoRaspberryPiPico.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoRaspberryPiPico.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoRaspberryPiPico.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoRaspberryPiPico.serial.raspberryPiPicoMultiSerialBegin": "串口 [NO] 启动波特率  [VALUE]",
    "arduinoUno.InterrupModeMenu.changeEdge": "电平改变",
    "arduinoUno.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoUno.InterrupModeMenu.low": "低电平",
    "arduinoUno.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoUno.category.data": "数据",
    "arduinoUno.category.pins": "引脚",
    "arduinoUno.category.serial": "串口",
    "arduinoUno.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoUno.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoUno.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "小数",
    "arduinoUno.dataTypeMenu.integer": "整数",
    "arduinoUno.dataTypeMenu.string": "字符串",
    "arduinoUno.eolMenu.noWarp": "不换行",
    "arduinoUno.eolMenu.warp": "换行",
    "arduinoUno.levelMenu.high": "高",
    "arduinoUno.levelMenu.low": "低",
    "arduinoUno.modeMenu.input": "输入",
    "arduinoUno.modeMenu.inputPullup": "输入上拉",
    "arduinoUno.modeMenu.output": "输出",
    "arduinoUno.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoUno.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoUno.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoUno.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoUno.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoUno.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoUno.pins.setPwmOutput": "设置引脚 [PIN] pwm为 [OUT]",
    "arduinoUno.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoUno.serial.serialAvailable": "串口可读取字节数",
    "arduinoUno.serial.serialBegin": "串口启动波特率  [VALUE]",
    "arduinoUno.serial.serialPrint": "串口打印 [VALUE] [EOL]",
    "arduinoUno.serial.serialReadAByte": "串口读取1个字节",
    "boost.color.any": "任何颜色",
    "boost.color.black": "黑色",
    "boost.color.blue": "蓝色",
    "boost.color.green": "绿色",
    "boost.color.red": "黄色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黄色",
    "boost.getMotorPosition": "马达 [MOTOR_REPORTER_ID] 位置",
    "boost.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "boost.motorDirection.backward": "逆时针",
    "boost.motorDirection.forward": "顺时针",
    "boost.motorDirection.reverse": "反转",
    "boost.motorOff": "关闭马达 [MOTOR_ID]",
    "boost.motorOn": "开启马达 [MOTOR_ID]",
    "boost.motorOnFor": "使马达 [MOTOR_ID]转动 [DURATION] 秒",
    "boost.motorOnForRotation": "使马达 [MOTOR_ID]转动 [ROTATION] 圈",
    "boost.seeingColor": "看到 [COLOR]积木 ?",
    "boost.setLightHue": "将灯光颜色设为[HUE]",
    "boost.setMotorDirection": "将马达[MOTOR_ID] 方向设为 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "将马达 [MOTOR_ID] 速度设为 [POWER]%",
    "boost.tiltDirection.any": "任意方向",
    "boost.tiltDirection.down": "下",
    "boost.tiltDirection.left": "左",
    "boost.tiltDirection.right": "右",
    "boost.tiltDirection.up": "上",
    "boost.whenColor": "当看到[COLOR]积木",
    "boost.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ev3.beepNote": "鸣笛[NOTE][TIME]秒",
    "ev3.buttonPressed": "按下按钮[PORT]？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距离",
    "ev3.getMotorPosition": "马达[PORT]的位置",
    "ev3.motorSetPower": "马达[PORT]功率设为[POWER]%",
    "ev3.motorTurnClockwise": "马达[PORT]正转[TIME]秒",
    "ev3.motorTurnCounterClockwise": "马达[PORT]反转[TIME]秒",
    "ev3.whenBrightnessLessThan": "当亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "当按下按钮[PORT]",
    "ev3.whenDistanceLessThan": "当距离 < [DISTANCE]",
    "gdxfor.getAcceleration": "向[DIRECTION]的加速度",
    "gdxfor.getForce": "受力",
    "gdxfor.getSpin": "向[DIRECTION]的旋转速度",
    "gdxfor.getTilt": "向[TILT]倾角",
    "gdxfor.isFreeFalling": "自由落体？",
    "gdxfor.isTilted": "向[TILT]倾斜？",
    "gdxfor.pulled": "拉扯",
    "gdxfor.pushed": "挤压",
    "gdxfor.shaken": "被晃动",
    "gdxfor.startedFalling": "开始自由落体",
    "gdxfor.tiltDirectionMenu.any": "任意方向",
    "gdxfor.tiltDirectionMenu.back": "后",
    "gdxfor.tiltDirectionMenu.front": "前",
    "gdxfor.tiltDirectionMenu.left": "左",
    "gdxfor.tiltDirectionMenu.right": "右",
    "gdxfor.turnedFaceDown": "正面向下",
    "gdxfor.turnedFaceUp": "正面向上",
    "gdxfor.whenForcePushedOrPulled": "当力传感器被[PUSH_PULL]",
    "gdxfor.whenGesture": "当传感器[GESTURE]",
    "gdxfor.whenTilted": "当向[TILT]倾斜",
    "makeymakey.downArrow": "↓",
    "makeymakey.downArrowShort": "下",
    "makeymakey.leftArrow": "←",
    "makeymakey.leftArrowShort": "左",
    "makeymakey.rightArrow": "→",
    "makeymakey.rightArrowShort": "右",
    "makeymakey.spaceKey": "空格",
    "makeymakey.upArrow": "↑",
    "makeymakey.upArrowShort": "上",
    "makeymakey.whenKeyPressed": "当按下 [KEY] 键",
    "makeymakey.whenKeysPressedInOrder": "当依次按下[SEQUENCE]键时",
    "microPythonEsp32.InterrupModeMenu.changeEdge": "电平改变",
    "microPythonEsp32.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonEsp32.InterrupModeMenu.high": "高电平",
    "microPythonEsp32.InterrupModeMenu.low": "低电平",
    "microPythonEsp32.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonEsp32.category.console": "控制台",
    "microPythonEsp32.category.pins": "引脚",
    "microPythonEsp32.console.consoleInput": "提示 [TEXT] 并读取输入",
    "microPythonEsp32.console.consolePrint": "打印 [TEXT] [EOL]",
    "microPythonEsp32.eolMenu.noWarp": "不换行",
    "microPythonEsp32.eolMenu.warp": "换行",
    "microPythonEsp32.levelMenu.high": "高",
    "microPythonEsp32.levelMenu.low": "低",
    "microPythonEsp32.modeMenu.input": "输入",
    "microPythonEsp32.modeMenu.inputPulldown": "输入下拉",
    "microPythonEsp32.modeMenu.inputPullup": "输入上拉",
    "microPythonEsp32.modeMenu.output": "输出",
    "microPythonEsp32.pins.esp32AttachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "microPythonEsp32.pins.esp32ReadAnalogPin": "读取模拟引脚 [PIN]",
    "microPythonEsp32.pins.esp32ReadDigitalPin": "读取数字引脚 [PIN]",
    "microPythonEsp32.pins.esp32ReadTouchPin": "读取触摸引脚 [PIN]",
    "microPythonEsp32.pins.esp32SetDACOutput": "设置 dac 引脚 [PIN] 输出 [OUT]",
    "microPythonEsp32.pins.esp32SetDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microPythonEsp32.pins.esp32SetPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "microPythonEsp32.pins.esp32SetPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "microPythonEsp32.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "microPythonEsp8266.category.console": "控制台",
    "microPythonEsp8266.category.pins": "引脚",
    "microPythonEsp8266.console.consoleInput": "提示 [TEXT] 并读取输入",
    "microPythonEsp8266.console.consolePrint": "打印 [TEXT] [EOL]",
    "microPythonEsp8266.eolMenu.noWarp": "不换行",
    "microPythonEsp8266.eolMenu.warp": "换行",
    "microPythonEsp8266.levelMenu.high": "高",
    "microPythonEsp8266.levelMenu.low": "低",
    "microPythonEsp8266.modeMenu.input": "输入",
    "microPythonEsp8266.modeMenu.inputPullup": "输入上拉",
    "microPythonEsp8266.modeMenu.output": "输出",
    "microPythonEsp8266.pins.esp8266AttachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "microPythonEsp8266.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "microPythonEsp8266.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "microPythonEsp8266.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microPythonEsp8266.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "microPythonEsp8266.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "microPythonEsp8266.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "microPythonK210.InterrupModeMenu.changeEdge": "电平改变",
    "microPythonK210.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonK210.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonK210.category.console": "控制台",
    "microPythonK210.category.pins": "引脚",
    "microPythonK210.category.serial": "串口",
    "microPythonK210.console.consoleInput": "提示 [TEXT] 并读取输入",
    "microPythonK210.console.consolePrint": "打印 [TEXT] [EOL]",
    "microPythonK210.eolMenu.noWarp": "不换行",
    "microPythonK210.eolMenu.warp": "换行",
    "microPythonK210.levelMenu.high": "高",
    "microPythonK210.levelMenu.low": "低",
    "microPythonK210.modeMenu.input": "输入",
    "microPythonK210.modeMenu.inputPulldown": "输入下拉",
    "microPythonK210.modeMenu.inputPullup": "输入上拉",
    "microPythonK210.modeMenu.output": "输出",
    "microPythonK210.pins.k210AttachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "microPythonK210.pins.k210SetPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "microPythonK210.pins.k210SetPwmOutput": "设置 pwm 引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "microPythonK210.pins.k210SetServoOutput": "设置舵机引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "microPythonK210.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "microPythonK210.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microPythonK210.serial.k210SerialBegin": "串口 [NO] 启动波特率 [BAUD] 引脚 RX [RX_PIN] TX [TX_PIN]",
    "microPythonK210.serial.serialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "microPythonK210.serial.serialReadALine": "串口 [NO] 读取1行",
    "microPythonRaspberryPiPico.InterrupModeMenu.changeEdge": "电平改变",
    "microPythonRaspberryPiPico.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonRaspberryPiPico.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonRaspberryPiPico.category.console": "控制台",
    "microPythonRaspberryPiPico.category.pins": "引脚",
    "microPythonRaspberryPiPico.category.serial": "串口",
    "microPythonRaspberryPiPico.console.consoleInput": "提示 [TEXT] 并读取输入",
    "microPythonRaspberryPiPico.console.consolePrint": "打印 [TEXT] [EOL]",
    "microPythonRaspberryPiPico.eolMenu.noWarp": "不换行",
    "microPythonRaspberryPiPico.eolMenu.warp": "换行",
    "microPythonRaspberryPiPico.levelMenu.high": "高",
    "microPythonRaspberryPiPico.levelMenu.low": "低电平",
    "microPythonRaspberryPiPico.modeMenu.input": "输入",
    "microPythonRaspberryPiPico.modeMenu.inputPulldown": "输入下拉",
    "microPythonRaspberryPiPico.modeMenu.inputPullup": "输入上拉",
    "microPythonRaspberryPiPico.modeMenu.output": "输出",
    "microPythonRaspberryPiPico.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "microPythonRaspberryPiPico.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "microPythonRaspberryPiPico.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "microPythonRaspberryPiPico.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microPythonRaspberryPiPico.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "microPythonRaspberryPiPico.pins.setPwmOutputU16": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "microPythonRaspberryPiPico.pins.setServoOutputU16": "设置舵机引脚 [PIN] 输出 [OUT]",
    "microPythonRaspberryPiPico.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "microPythonRaspberryPiPico.serial.multiSerialReadALine": "串口 [NO] 读取1行",
    "microPythonRaspberryPiPico.serial.raspberryPiPicoSerialBegin": "串口 [NO] 启动波特率 [BAUD] 引脚 RX [RX_PIN] TX [TX_PIN]",
    "microbit.axisMenu.xAxis": "x轴",
    "microbit.axisMenu.yAxis": "y轴",
    "microbit.axisMenu.zAxis": "z轴",
    "microbit.buttonsMenu.any": "任意",
    "microbit.category.console": "控制台",
    "microbit.category.display": "显示",
    "microbit.category.pins": "引脚",
    "microbit.category.sensor": "传感器",
    "microbit.category.wireless": "无线电",
    "microbit.clearDisplay": "清空屏幕",
    "microbit.console.consolePrint": "打印 [TEXT]",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.display.clearDisplay": "清空屏幕",
    "microbit.display.lightPixelAt": "[STATE] 坐标 x: [X] , y: [Y] 灯",
    "microbit.display.show": "显示 [TEXT]",
    "microbit.display.showImage": "显示图案 [VALUE]",
    "microbit.display.showImageUntil": "显示图案 [VALUE] 持续 [TIME] 秒",
    "microbit.display.showOnPiexlbrightness": "设置坐标 x: [X], y: [Y] 的亮度为 [BRT]",
    "microbit.display.showUntilScrollDone": "显示 [TEXT] 直到滚动结束",
    "microbit.displaySymbol": "显示[MATRIX]",
    "microbit.displayText": "显示文本[TEXT]",
    "microbit.gestruesMenu.faceDown": "正面朝下",
    "microbit.gestruesMenu.faceUp": "正面朝上",
    "microbit.gestruesMenu.freefall": "自由下落",
    "microbit.gestruesMenu.shaken": "被摇晃",
    "microbit.gestruesMenu.tiltedDownward": "向下倾斜",
    "microbit.gestruesMenu.tiltedLeftward": "向左倾斜",
    "microbit.gestruesMenu.tiltedRightward": "向右倾斜",
    "microbit.gestruesMenu.tiltedUpward": "向上倾斜",
    "microbit.gesturesMenu.jumped": "抛起",
    "microbit.gesturesMenu.moved": "移动",
    "microbit.gesturesMenu.shaken": "晃动",
    "microbit.isButtonPressed": "按下[BTN]按钮？",
    "microbit.isTilted": "向[DIRECTION]倾斜？",
    "microbit.ledState.off": "熄灭",
    "microbit.ledState.on": "点亮",
    "microbit.levelMenu.high": "高",
    "microbit.levelMenu.low": "低",
    "microbit.pinStateMenu.off": "低电平",
    "microbit.pinStateMenu.on": "高电平",
    "microbit.pins.pinIsTouched": "引脚 [PIN] 被触摸",
    "microbit.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "microbit.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "microbit.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microbit.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "microbit.sensor.axisAcceleration": "[AXIS] 轴加速度",
    "microbit.sensor.buttonIsPressed": "按键 [KEY] 被按下?",
    "microbit.sensor.calibrateCompass": "校准指南针",
    "microbit.sensor.compassAngle": "指南针角度",
    "microbit.sensor.compassMagneticDensity": "指南针磁场强度",
    "microbit.sensor.gestureIsX": "姿态是 [STA]?",
    "microbit.sensor.lightLevel": "亮度",
    "microbit.sensor.runningTime": "运行时间",
    "microbit.sensor.temperature": "温度",
    "microbit.tiltAngle": "向[DIRECTION]倾角",
    "microbit.tiltDirectionMenu.any": "任意",
    "microbit.tiltDirectionMenu.back": "后",
    "microbit.tiltDirectionMenu.front": "前",
    "microbit.tiltDirectionMenu.left": "左",
    "microbit.tiltDirectionMenu.right": "右",
    "microbit.whenButtonPressed": "当按下[BTN]按钮",
    "microbit.whenGesture": "当被[GESTURE]",
    "microbit.whenPinConnected": "当引脚[PIN]接地",
    "microbit.whenTilted": "当向[DIRECTION]倾斜",
    "microbit.wireless.closeWirelessCommunication": "关闭无线通讯",
    "microbit.wireless.openWirelessCommunication": "打开无线通讯",
    "microbit.wireless.receiveWirelessMessage": "收到无线消息",
    "microbit.wireless.resetWirelessCommunication": "复位无线通讯",
    "microbit.wireless.sendWirelessMessage": "发送无线消息 [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "设置无线通讯频道为 [CH]",
    "music.categoryName": "音乐",
    "music.changeTempo": "将演奏速度增加[TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦戈鼓",
    "music.drumCabasa": "(15) 卡巴萨",
    "music.drumClaves": "(9) 音棒",
    "music.drumClosedHiHat": "(6) 闭击踩镲",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛铃",
    "music.drumCrashCymbal": "(4) 碎音钹",
    "music.drumCuica": "(18) 锯加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 手掌",
    "music.drumOpenHiHat": "(5) 开击踩镲",
    "music.drumSideStick": "(3) 敲鼓边",
    "music.drumSnare": "(1) 小军鼓",
    "music.drumTambourine": "(7) 铃鼓",
    "music.drumTriangle": "(12) 三角铁",
    "music.drumVibraslap": "(17) 颤音器",
    "music.drumWoodBlock": "(10) 木鱼",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 贝斯",
    "music.instrumentBassoon": "(14) 巴松管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 唱诗班",
    "music.instrumentClarinet": "(10) 单簧管",
    "music.instrumentElectricGuitar": "(5) 电吉他",
    "music.instrumentElectricPiano": "(2) 电钢琴",
    "music.instrumentFlute": "(12) 长笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 马林巴琴",
    "music.instrumentMusicBox": "(17) 八音盒",
    "music.instrumentOrgan": "(3) 风琴",
    "music.instrumentPiano": "(1) 钢琴",
    "music.instrumentPizzicato": "(7) 拨弦",
    "music.instrumentSaxophone": "(11) 萨克斯管",
    "music.instrumentSteelDrum": "(18) 钢鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 长号",
    "music.instrumentVibraphone": "(16) 颤音琴",
    "music.instrumentWoodenFlute": "(13) 木长笛",
    "music.midiPlayDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "将乐器设为 [INSTRUMENT]",
    "music.playDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音符[NOTE][BEATS]拍",
    "music.restForBeats": "休止[BEATS]拍",
    "music.setInstrument": "将乐器设为 [INSTRUMENT]",
    "music.setTempo": "将演奏速度设定为[TEMPO]",
    "pen.categoryName": "画笔",
    "pen.changeColorParam": "将笔的 [COLOR_PARAM] 增加[VALUE]",
    "pen.changeHue": "将笔的颜色增加[HUE]",
    "pen.changeShade": "将笔的亮度增加[SHADE]",
    "pen.changeSize": "将笔的粗细增加[SIZE]",
    "pen.clear": "全部擦除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "颜色",
    "pen.colorMenu.saturation": "饱和度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "落笔",
    "pen.penUp": "抬笔",
    "pen.setColor": "将笔的颜色设为[COLOR]",
    "pen.setColorParam": "将笔的 [COLOR_PARAM] 设为[VALUE]",
    "pen.setHue": "将笔的颜色设为[HUE]",
    "pen.setShade": "将笔的亮度设为[SHADE]",
    "pen.setSize": "将笔的粗细设为[SIZE]",
    "pen.stamp": "图章",
    "speech.defaultWhenIHearValue": "开始",
    "speech.extensionName": "语音识别",
    "speech.listenAndWait": "听候语音输入",
    "speech.speechReporter": "语音输入",
    "speech.whenIHear": "当听到[PHRASE]",
    "text2speech.alto": "中音",
    "text2speech.categoryName": "文字朗读",
    "text2speech.defaultTextToSpeak": "你好",
    "text2speech.giant": "巨人",
    "text2speech.kitten": "小猫",
    "text2speech.setLanguageBlock": "将朗读语言设置为[LANGUAGE]",
    "text2speech.setVoiceBlock": "使用 [VOICE] 嗓音",
    "text2speech.speakAndWaitBlock": "朗读 [WORDS]",
    "text2speech.squeak": "尖细",
    "text2speech.tenor": "男高音",
    "translate.categoryName": "翻译",
    "translate.defaultTextToTranslate": "你好",
    "translate.translateBlock": "将 [WORDS] 译为 [LANGUAGE]",
    "translate.viewerLanguage": "访客语言",
    "videoSensing.categoryName": "视频侦测",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "运动",
    "videoSensing.off": "关闭",
    "videoSensing.on": "开启",
    "videoSensing.onFlipped": "镜像开启",
    "videoSensing.setVideoTransparency": "将视频透明度设为[TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "相对于[SUBJECT]的视频[ATTRIBUTE]",
    "videoSensing.videoToggle": "[VIDEO_STATE]摄像头",
    "videoSensing.whenMotionGreaterThan": "当视频运动 > [REFERENCE]",
    "wedo2.getDistance": "距离",
    "wedo2.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "wedo2.isTilted": "向[TILT_DIRECTION_ANY]倾斜？",
    "wedo2.motorDirection.backward": "逆时针",
    "wedo2.motorDirection.forward": "顺时针",
    "wedo2.motorDirection.reverse": "反转",
    "wedo2.motorId.a": "马达A",
    "wedo2.motorId.all": "所有马达",
    "wedo2.motorId.b": "马达B",
    "wedo2.motorId.default": "马达",
    "wedo2.motorOff": "关闭[MOTOR_ID]",
    "wedo2.motorOn": "开启[MOTOR_ID]",
    "wedo2.motorOnFor": "开启[MOTOR_ID][DURATION]秒",
    "wedo2.playNoteFor": "演奏音符[NOTE][DURATION]秒",
    "wedo2.setLightHue": "将灯光颜色设为[HUE]",
    "wedo2.setMotorDirection": "将[MOTOR_ID]转向设为[MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "将[MOTOR_ID]功率设为[POWER]",
    "wedo2.tiltDirection.any": "任意方向",
    "wedo2.tiltDirection.down": "下",
    "wedo2.tiltDirection.left": "左",
    "wedo2.tiltDirection.right": "右",
    "wedo2.tiltDirection.up": "上",
    "wedo2.whenDistance": "当距离[OP][REFERENCE]",
    "wedo2.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜"
  },
  "zh-tw": {
    "arduinoEsp32.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoEsp32.InterrupModeMenu.high": "高電位",
    "arduinoEsp32.InterrupModeMenu.low": "低電位",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoEsp32.category.data": "數據",
    "arduinoEsp32.category.pins": "腳位",
    "arduinoEsp32.category.serial": "串口",
    "arduinoEsp32.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoEsp32.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoEsp32.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "小數",
    "arduinoEsp32.dataTypeMenu.integer": "整數",
    "arduinoEsp32.dataTypeMenu.string": "字串",
    "arduinoEsp32.eolMenu.noWarp": "不換行",
    "arduinoEsp32.eolMenu.warp": "換行",
    "arduinoEsp32.levelMenu.high": "高",
    "arduinoEsp32.levelMenu.low": "低",
    "arduinoEsp32.modeMenu.input": "輸入",
    "arduinoEsp32.modeMenu.inputPulldown": "輸入下拉",
    "arduinoEsp32.modeMenu.inputPullup": "輸入上拉",
    "arduinoEsp32.modeMenu.output": "輸出",
    "arduinoEsp32.pins.esp32AttachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoEsp32.pins.esp32DetachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "讀取觸摸腳位 [PIN]",
    "arduinoEsp32.pins.esp32SetDACOutput": "設置 dac 腳位 [PIN] 輸出 [OUT]",
    "arduinoEsp32.pins.esp32SetPwmOutput": "設置 pwm 腳位 [PIN] 使用通道 [CH] 輸出 [OUT]",
    "arduinoEsp32.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "讀取數位腳位 [PIN]",
    "arduinoEsp32.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoEsp32.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoEsp32.pins.setServoOutput": "設置舵機腳位 [PIN] 使用通道 [CH] 輸出 [OUT]",
    "arduinoEsp32.serial.multiSerialAvailable": "串口 [NO] 可讀取字節數",
    "arduinoEsp32.serial.multiSerialBegin": "串口 [NO] 啟動鮑率 [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "串口 [NO] 讀取1個字節",
    "arduinoEsp8266.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoEsp8266.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoEsp8266.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoEsp8266.category.data": "數據",
    "arduinoEsp8266.category.pins": "腳位",
    "arduinoEsp8266.category.serial": "串口",
    "arduinoEsp8266.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoEsp8266.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoEsp8266.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoEsp8266.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoEsp8266.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoEsp8266.dataTypeMenu.decimal": "小數",
    "arduinoEsp8266.dataTypeMenu.integer": "整數",
    "arduinoEsp8266.dataTypeMenu.string": "字串",
    "arduinoEsp8266.eolMenu.noWarp": "不換行",
    "arduinoEsp8266.eolMenu.warp": "換行",
    "arduinoEsp8266.levelMenu.high": "高",
    "arduinoEsp8266.levelMenu.low": "低",
    "arduinoEsp8266.modeMenu.input": "輸入",
    "arduinoEsp8266.modeMenu.inputPullup": "輸入上拉",
    "arduinoEsp8266.modeMenu.output": "輸出",
    "arduinoEsp8266.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoEsp8266.pins.esp8266AttachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoEsp8266.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoEsp8266.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "arduinoEsp8266.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoEsp8266.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoEsp8266.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoEsp8266.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoEsp8266.serial.serialAvailable": "串口可讀取字節數",
    "arduinoEsp8266.serial.serialBegin": "串口啟動鮑率 [VALUE]",
    "arduinoEsp8266.serial.serialPrint": "串口列印 [VALUE] [EOL]",
    "arduinoEsp8266.serial.serialReadAByte": "串口讀取1個字節",
    "arduinoK210.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoK210.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoK210.InterrupModeMenu.high": "高電位",
    "arduinoK210.InterrupModeMenu.low": "低電位",
    "arduinoK210.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoK210.category.data": "數據",
    "arduinoK210.category.pins": "腳位",
    "arduinoK210.category.serial": "串口",
    "arduinoK210.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoK210.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoK210.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoK210.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoK210.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoK210.dataTypeMenu.decimal": "小數",
    "arduinoK210.dataTypeMenu.integer": "整數",
    "arduinoK210.dataTypeMenu.string": "字串",
    "arduinoK210.eolMenu.noWarp": "不換行",
    "arduinoK210.eolMenu.warp": "換行",
    "arduinoK210.levelMenu.high": "高",
    "arduinoK210.levelMenu.low": "低",
    "arduinoK210.modeMenu.input": "輸入",
    "arduinoK210.modeMenu.inputPulldown": "輸入下拉",
    "arduinoK210.modeMenu.inputPullup": "輸入上拉",
    "arduinoK210.modeMenu.output": "輸出",
    "arduinoK210.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoK210.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoK210.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "arduinoK210.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoK210.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoK210.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoK210.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoK210.serial.multiSerialAvailable": "串口 [NO] 可讀取字節數",
    "arduinoK210.serial.multiSerialBegin": "串口 [NO] 啟動波特率 [BAUD] 引腳 RX [RX_PIN] TX [TX_PIN]",
    "arduinoK210.serial.multiSerialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "arduinoK210.serial.multiSerialReadAByte": "串口 [NO] 讀取1個字節",
    "arduinoLeonardo.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoLeonardo.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoLeonardo.InterrupModeMenu.low": "低",
    "arduinoLeonardo.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoLeonardo.category.data": "數據",
    "arduinoLeonardo.category.pins": "腳位",
    "arduinoLeonardo.category.serial": "串口",
    "arduinoLeonardo.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoLeonardo.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoLeonardo.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "小數",
    "arduinoLeonardo.dataTypeMenu.integer": "整數",
    "arduinoLeonardo.dataTypeMenu.string": "字串",
    "arduinoLeonardo.eolMenu.noWarp": "不換行",
    "arduinoLeonardo.eolMenu.warp": "換行",
    "arduinoLeonardo.levelMenu.high": "高",
    "arduinoLeonardo.levelMenu.low": "低",
    "arduinoLeonardo.modeMenu.input": "輸入",
    "arduinoLeonardo.modeMenu.inputPullup": "輸入上拉",
    "arduinoLeonardo.modeMenu.output": "輸出",
    "arduinoLeonardo.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoLeonardo.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "讀取數位腳位 [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoLeonardo.serial.serialAvailable": "串口可讀取字節數",
    "arduinoLeonardo.serial.serialBegin": "串口啟動鮑率 [VALUE]",
    "arduinoLeonardo.serial.serialPrint": "串口列印 [VALUE] [EOL]",
    "arduinoLeonardo.serial.serialReadAByte": "串口讀取1個字節",
    "arduinoMega2560.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoMega2560.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoMega2560.InterrupModeMenu.low": "低",
    "arduinoMega2560.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoMega2560.category.data": "數據",
    "arduinoMega2560.category.pins": "腳位",
    "arduinoMega2560.category.serial": "串口",
    "arduinoMega2560.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoMega2560.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoMega2560.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "小數",
    "arduinoMega2560.dataTypeMenu.integer": "整數",
    "arduinoMega2560.dataTypeMenu.string": "字串",
    "arduinoMega2560.eolMenu.noWarp": "不換行",
    "arduinoMega2560.eolMenu.warp": "換行",
    "arduinoMega2560.levelMenu.high": "高",
    "arduinoMega2560.levelMenu.low": "低",
    "arduinoMega2560.modeMenu.input": "輸入",
    "arduinoMega2560.modeMenu.inputPullup": "輸入上拉",
    "arduinoMega2560.modeMenu.output": "輸出",
    "arduinoMega2560.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoMega2560.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "讀取數位腳位 [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoMega2560.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "串口 [NO] 可讀取字節數",
    "arduinoMega2560.serial.multiSerialBegin": "串口 [NO] 啟動鮑率 [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "串口 [NO] 讀取1個字節",
    "arduinoPeripheral.connection.connectFirmataTimeout": "嘗試連接 firmata 超時, 請先下載韌體",
    "arduinoRaspberryPiPico.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoRaspberryPiPico.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoRaspberryPiPico.InterrupModeMenu.high": "高電位",
    "arduinoRaspberryPiPico.InterrupModeMenu.low": "低電位",
    "arduinoRaspberryPiPico.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoRaspberryPiPico.category.data": "數據",
    "arduinoRaspberryPiPico.category.pins": "腳位",
    "arduinoRaspberryPiPico.category.serial": "串口",
    "arduinoRaspberryPiPico.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoRaspberryPiPico.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoRaspberryPiPico.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoRaspberryPiPico.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoRaspberryPiPico.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoRaspberryPiPico.dataTypeMenu.decimal": "小數",
    "arduinoRaspberryPiPico.dataTypeMenu.integer": "整數",
    "arduinoRaspberryPiPico.dataTypeMenu.string": "字串",
    "arduinoRaspberryPiPico.eolMenu.noWarp": "不換行",
    "arduinoRaspberryPiPico.eolMenu.warp": "換行",
    "arduinoRaspberryPiPico.levelMenu.high": "高",
    "arduinoRaspberryPiPico.levelMenu.low": "低",
    "arduinoRaspberryPiPico.modeMenu.input": "輸入",
    "arduinoRaspberryPiPico.modeMenu.inputPulldown": "輸入下拉",
    "arduinoRaspberryPiPico.modeMenu.inputPullup": "輸入上拉",
    "arduinoRaspberryPiPico.modeMenu.output": "輸出",
    "arduinoRaspberryPiPico.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoRaspberryPiPico.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoRaspberryPiPico.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoRaspberryPiPico.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "arduinoRaspberryPiPico.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoRaspberryPiPico.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoRaspberryPiPico.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoRaspberryPiPico.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoRaspberryPiPico.serial.multiSerialAvailable": "串口 [NO] 可讀取字節數",
    "arduinoRaspberryPiPico.serial.multiSerialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "arduinoRaspberryPiPico.serial.multiSerialReadAByte": "串口 [NO] 讀取1個字節",
    "arduinoRaspberryPiPico.serial.raspberryPiPicoMultiSerialBegin": "串口 [NO] 啟動鮑率 [VALUE]",
    "arduinoUno.InterrupModeMenu.changeEdge": "電位改變",
    "arduinoUno.InterrupModeMenu.fallingEdge": "下降沿",
    "arduinoUno.InterrupModeMenu.low": "低",
    "arduinoUno.InterrupModeMenu.risingEdge": "上升沿",
    "arduinoUno.category.data": "數據",
    "arduinoUno.category.pins": "腳位",
    "arduinoUno.category.serial": "串口",
    "arduinoUno.data.dataConstrain": "約束 [DATA] 介於 ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "轉換 [DATA] 為 [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "轉換 [DATA] 為 ASCII 字符",
    "arduinoUno.data.dataConvertASCIINumber": "轉換 [DATA] 為 ASCII 編碼",
    "arduinoUno.data.dataMap": "映射 [DATA] 從 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "小數",
    "arduinoUno.dataTypeMenu.integer": "整數",
    "arduinoUno.dataTypeMenu.string": "字串",
    "arduinoUno.eolMenu.noWarp": "不換行",
    "arduinoUno.eolMenu.warp": "換行",
    "arduinoUno.levelMenu.high": "高",
    "arduinoUno.levelMenu.low": "低",
    "arduinoUno.modeMenu.input": "輸入",
    "arduinoUno.modeMenu.inputPullup": "輸入上拉",
    "arduinoUno.modeMenu.output": "輸出",
    "arduinoUno.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "arduinoUno.pins.detachInterrupt": "取消中斷腳位 [PIN]",
    "arduinoUno.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "arduinoUno.pins.readDigitalPin": "讀取數位腳位 [PIN]",
    "arduinoUno.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "arduinoUno.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "arduinoUno.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "arduinoUno.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "arduinoUno.serial.serialAvailable": "串口可讀取字節數",
    "arduinoUno.serial.serialBegin": "串口啟動鮑率 [VALUE]",
    "arduinoUno.serial.serialPrint": "串口列印 [VALUE] [EOL]",
    "arduinoUno.serial.serialReadAByte": "串口讀取1個字節",
    "boost.color.any": "任何顏色",
    "boost.color.black": "黑色",
    "boost.color.blue": "藍色",
    "boost.color.green": "綠色",
    "boost.color.red": "紅色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黃色",
    "boost.getMotorPosition": "[MOTOR_REPORTER_ID] 轉向角度",
    "boost.getTiltAngle": "傾斜角度 [TILT_DIRECTION]",
    "boost.motorDirection.backward": "逆時針",
    "boost.motorDirection.forward": "順時針",
    "boost.motorDirection.reverse": "反轉",
    "boost.motorOff": "[MOTOR_ID] 停止",
    "boost.motorOn": "[MOTOR_ID] 啟動",
    "boost.motorOnFor": "[MOTOR_ID] 啟動 持續 [DURATION] 秒",
    "boost.motorOnForRotation": "[MOTOR_ID] 啟動 持續 [ROTATION] 圈",
    "boost.seeingColor": "看到顏色 [COLOR]？",
    "boost.setLightHue": "LED 顏色設為 [HUE]",
    "boost.setMotorDirection": "[MOTOR_ID] 方向設為 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "[MOTOR_ID] 動力設為 [POWER] %",
    "boost.tiltDirection.any": "任何",
    "boost.tiltDirection.down": "向下",
    "boost.tiltDirection.left": "向左",
    "boost.tiltDirection.right": "向右",
    "boost.tiltDirection.up": "向上",
    "boost.whenColor": "當顏色 [COLOR]  被看到",
    "boost.whenTilted": "當傾斜 [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "演奏音階 [NOTE] 持續 [TIME] 秒",
    "ev3.buttonPressed": "按鈕 [PORT] 被按下？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距離",
    "ev3.getMotorPosition": "馬達 埠[PORT] 轉向角度",
    "ev3.motorSetPower": "馬達 埠[PORT] 動力設為 [POWER] %",
    "ev3.motorTurnClockwise": "馬達 埠[PORT] 順時針旋轉 [TIME] 秒",
    "ev3.motorTurnCounterClockwise": "馬達 埠[PORT] 逆時針旋轉 [TIME] 秒",
    "ev3.whenBrightnessLessThan": "當亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "當按鈕 [PORT] 被按下",
    "ev3.whenDistanceLessThan": "當距離 < [DISTANCE]",
    "gdxfor.getAcceleration": "加速度 [DIRECTION]",
    "gdxfor.getForce": "力量",
    "gdxfor.getSpin": "旋轉速度 [DIRECTION]",
    "gdxfor.getTilt": "傾斜角度 [TILT]",
    "gdxfor.isFreeFalling": "自由掉落？",
    "gdxfor.isTilted": "傾斜 [TILT]？",
    "gdxfor.pulled": "向外拉",
    "gdxfor.pushed": "向內推",
    "gdxfor.shaken": "晃動",
    "gdxfor.startedFalling": "開始掉落",
    "gdxfor.tiltDirectionMenu.any": "任何",
    "gdxfor.tiltDirectionMenu.back": "向下",
    "gdxfor.tiltDirectionMenu.front": "向上",
    "gdxfor.tiltDirectionMenu.left": "向左",
    "gdxfor.tiltDirectionMenu.right": "向右",
    "gdxfor.turnedFaceDown": "背面朝上",
    "gdxfor.turnedFaceUp": "正面朝上",
    "gdxfor.whenForcePushedOrPulled": "當重力感測器[PUSH_PULL]",
    "gdxfor.whenGesture": "當 [GESTURE]",
    "gdxfor.whenTilted": "當傾斜 [TILT]",
    "makeymakey.downArrow": "向下",
    "makeymakey.downArrowShort": "向下",
    "makeymakey.leftArrow": "向左",
    "makeymakey.leftArrowShort": "向左",
    "makeymakey.rightArrow": "向右",
    "makeymakey.rightArrowShort": "向右",
    "makeymakey.spaceKey": "空白",
    "makeymakey.upArrow": "向上",
    "makeymakey.upArrowShort": "向上",
    "makeymakey.whenKeyPressed": "當 [KEY] 按鈕被按下",
    "makeymakey.whenKeysPressedInOrder": "當 [SEQUENCE] 按鈕被依序按下",
    "microPythonEsp32.InterrupModeMenu.changeEdge": "電位改變",
    "microPythonEsp32.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonEsp32.InterrupModeMenu.high": "高電位",
    "microPythonEsp32.InterrupModeMenu.low": "低電位",
    "microPythonEsp32.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonEsp32.category.console": "控制台",
    "microPythonEsp32.category.pins": "腳位",
    "microPythonEsp32.console.consoleInput": "提示 [TEXT] 並讀取輸入",
    "microPythonEsp32.console.consolePrint": "列印 [TEXT] [EOL]",
    "microPythonEsp32.eolMenu.noWarp": "不換行",
    "microPythonEsp32.eolMenu.warp": "換行",
    "microPythonEsp32.levelMenu.high": "高",
    "microPythonEsp32.levelMenu.low": "低",
    "microPythonEsp32.modeMenu.input": "輸入",
    "microPythonEsp32.modeMenu.inputPulldown": "輸入下拉",
    "microPythonEsp32.modeMenu.inputPullup": "輸入上拉",
    "microPythonEsp32.modeMenu.output": "輸出",
    "microPythonEsp32.pins.esp32AttachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "microPythonEsp32.pins.esp32ReadAnalogPin": "讀取類比腳位 [PIN]",
    "microPythonEsp32.pins.esp32ReadDigitalPin": "讀取數字腳位 [PIN]",
    "microPythonEsp32.pins.esp32ReadTouchPin": "讀取觸摸腳位 [PIN]",
    "microPythonEsp32.pins.esp32SetDACOutput": "設置 dac 腳位 [PIN] 輸出 [OUT]",
    "microPythonEsp32.pins.esp32SetDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "microPythonEsp32.pins.esp32SetPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "microPythonEsp32.pins.esp32SetPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "microPythonEsp32.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "microPythonEsp8266.category.console": "控制台",
    "microPythonEsp8266.category.pins": "腳位",
    "microPythonEsp8266.console.consoleInput": "提示 [TEXT] 並讀取輸入",
    "microPythonEsp8266.console.consolePrint": "列印 [TEXT] [EOL]",
    "microPythonEsp8266.eolMenu.noWarp": "不換行",
    "microPythonEsp8266.eolMenu.warp": "換行",
    "microPythonEsp8266.levelMenu.high": "高",
    "microPythonEsp8266.levelMenu.low": "低",
    "microPythonEsp8266.modeMenu.input": "輸入",
    "microPythonEsp8266.modeMenu.inputPullup": "輸入上拉",
    "microPythonEsp8266.modeMenu.output": "輸出",
    "microPythonEsp8266.pins.esp8266AttachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "microPythonEsp8266.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "microPythonEsp8266.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "microPythonEsp8266.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "microPythonEsp8266.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "microPythonEsp8266.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "microPythonEsp8266.pins.setServoOutput": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "microPythonK210.InterrupModeMenu.changeEdge": "電位改變",
    "microPythonK210.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonK210.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonK210.category.console": "控制台",
    "microPythonK210.category.pins": "腳位",
    "microPythonK210.category.serial": "串口",
    "microPythonK210.console.consoleInput": "提示 [TEXT] 並讀取輸入",
    "microPythonK210.console.consolePrint": "列印 [TEXT] [EOL]",
    "microPythonK210.eolMenu.noWarp": "不換行",
    "microPythonK210.eolMenu.warp": "換行",
    "microPythonK210.levelMenu.high": "高",
    "microPythonK210.levelMenu.low": "低",
    "microPythonK210.modeMenu.input": "輸入",
    "microPythonK210.modeMenu.inputPulldown": "輸入下拉",
    "microPythonK210.modeMenu.inputPullup": "輸入上拉",
    "microPythonK210.modeMenu.output": "輸出",
    "microPythonK210.pins.k210AttachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "microPythonK210.pins.k210SetPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "microPythonK210.pins.k210SetPwmOutput": "設置 pwm 腳位 [PIN] 使用通道 [CH] 輸出 [OUT]",
    "microPythonK210.pins.k210SetServoOutput": "設置舵機腳位 [PIN] 使用通道 [CH] 輸出 [OUT]",
    "microPythonK210.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "microPythonK210.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "microPythonK210.serial.k210SerialBegin": "串口 [NO] 啟動波特率 [BAUD] 引腳 RX [RX_PIN] TX [TX_PIN]",
    "microPythonK210.serial.serialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "microPythonK210.serial.serialReadALine": "串口 [NO] 讀取1行",
    "microPythonRaspberryPiPico.InterrupModeMenu.changeEdge": "電位改變",
    "microPythonRaspberryPiPico.InterrupModeMenu.fallingEdge": "下降沿",
    "microPythonRaspberryPiPico.InterrupModeMenu.risingEdge": "上升沿",
    "microPythonRaspberryPiPico.category.console": "控制台",
    "microPythonRaspberryPiPico.category.pins": "腳位",
    "microPythonRaspberryPiPico.category.serial": "串口",
    "microPythonRaspberryPiPico.console.consoleInput": "提示 [TEXT] 並讀取輸入",
    "microPythonRaspberryPiPico.console.consolePrint": "列印 [TEXT] [EOL]",
    "microPythonRaspberryPiPico.eolMenu.noWarp": "不換行",
    "microPythonRaspberryPiPico.eolMenu.warp": "換行",
    "microPythonRaspberryPiPico.levelMenu.high": "高",
    "microPythonRaspberryPiPico.levelMenu.low": "低",
    "microPythonRaspberryPiPico.modeMenu.input": "輸入",
    "microPythonRaspberryPiPico.modeMenu.inputPulldown": "輸入下拉",
    "microPythonRaspberryPiPico.modeMenu.inputPullup": "輸入上拉",
    "microPythonRaspberryPiPico.modeMenu.output": "輸出",
    "microPythonRaspberryPiPico.pins.attachInterrupt": "設置中斷腳位 [PIN] 模式 [MODE] 執行",
    "microPythonRaspberryPiPico.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "microPythonRaspberryPiPico.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "microPythonRaspberryPiPico.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "microPythonRaspberryPiPico.pins.setPinMode": "設置腳位 [PIN] 模式 [MODE]",
    "microPythonRaspberryPiPico.pins.setPwmOutputU16": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "microPythonRaspberryPiPico.pins.setServoOutputU16": "設置舵機腳位 [PIN] 輸出 [OUT]",
    "microPythonRaspberryPiPico.serial.multiSerialPrint": "串口 [NO] 列印 [VALUE] [EOL]",
    "microPythonRaspberryPiPico.serial.multiSerialReadALine": "串口 [NO] 讀取1行",
    "microPythonRaspberryPiPico.serial.raspberryPiPicoSerialBegin": "串口 [NO] 啟動波特率 [BAUD] 引腳 RX [RX_PIN] TX [TX_PIN]",
    "microbit.axisMenu.xAxis": "x軸",
    "microbit.axisMenu.yAxis": "y軸",
    "microbit.axisMenu.zAxis": "z軸",
    "microbit.buttonsMenu.any": "任何",
    "microbit.category.console": "控制台",
    "microbit.category.display": "顯示",
    "microbit.category.pins": "腳位",
    "microbit.category.sensor": "感測器",
    "microbit.category.wireless": "無線",
    "microbit.clearDisplay": "清空畫面",
    "microbit.console.consolePrint": "列印 [TEXT]",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.display.clearDisplay": "清空螢幕",
    "microbit.display.lightPixelAt": " [STATE] 坐標 x: [X] , y: [Y] 燈",
    "microbit.display.show": "顯示 [TEXT]",
    "microbit.display.showImage": "顯示圖案 [VALUE]",
    "microbit.display.showImageUntil": "顯示圖案 [VALUE] 持續 [TIME] 秒",
    "microbit.display.showOnPiexlbrightness": "設置坐標 x: [X], y: [Y] 的亮度為 [BRT]",
    "microbit.display.showUntilScrollDone": "顯示 [TEXT] 直到滾動結束",
    "microbit.displaySymbol": "顯示圖示 [MATRIX]",
    "microbit.displayText": "顯示文字 [TEXT]",
    "microbit.gestruesMenu.faceDown": "正面朝下",
    "microbit.gestruesMenu.faceUp": "正面朝上",
    "microbit.gestruesMenu.freefall": "自由落體",
    "microbit.gestruesMenu.shaken": "晃動",
    "microbit.gestruesMenu.tiltedDownward": "向下傾斜",
    "microbit.gestruesMenu.tiltedLeftward": "向左傾斜",
    "microbit.gestruesMenu.tiltedRightward": "向右傾斜",
    "microbit.gestruesMenu.tiltedUpward": "向上傾斜",
    "microbit.gesturesMenu.jumped": "跳動",
    "microbit.gesturesMenu.moved": "移動",
    "microbit.gesturesMenu.shaken": "晃動",
    "microbit.isButtonPressed": "按鈕 [BTN] 被按下？",
    "microbit.isTilted": "傾斜 [DIRECTION]？",
    "microbit.ledState.off": "熄滅",
    "microbit.ledState.on": "點亮",
    "microbit.levelMenu.high": "高",
    "microbit.levelMenu.low": "低",
    "microbit.pinStateMenu.off": "關閉",
    "microbit.pinStateMenu.on": "開啟",
    "microbit.pins.pinIsTouched": "腳位 [PIN] 被觸摸",
    "microbit.pins.readAnalogPin": "讀取類比腳位 [PIN]",
    "microbit.pins.readDigitalPin": "讀取數字腳位 [PIN]",
    "microbit.pins.setDigitalOutput": "設置腳位 [PIN] 輸出 [LEVEL]",
    "microbit.pins.setPwmOutput": "設置 pwm 腳位 [PIN] 輸出 [OUT]",
    "microbit.sensor.axisAcceleration": "[AXIS] 軸加速度",
    "microbit.sensor.buttonIsPressed": "按鍵 [KEY] 被按下?",
    "microbit.sensor.calibrateCompass": "校準指南針",
    "microbit.sensor.compassAngle": "指南針角度",
    "microbit.sensor.compassMagneticDensity": "指南針磁場強度",
    "microbit.sensor.gestureIsX": "姿態是 [STA]?",
    "microbit.sensor.lightLevel": "亮度",
    "microbit.sensor.runningTime": "運行時間",
    "microbit.sensor.temperature": "溫度",
    "microbit.tiltAngle": "傾斜角度 [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "任何",
    "microbit.tiltDirectionMenu.back": "向下",
    "microbit.tiltDirectionMenu.front": "向上",
    "microbit.tiltDirectionMenu.left": "向左",
    "microbit.tiltDirectionMenu.right": "向右",
    "microbit.whenButtonPressed": "當按鈕 [BTN] 被按下",
    "microbit.whenGesture": "當 [GESTURE]",
    "microbit.whenPinConnected": "當腳位 [PIN] 接地",
    "microbit.whenTilted": "當傾斜 [DIRECTION]",
    "microbit.wireless.closeWirelessCommunication": "關閉無線通訊",
    "microbit.wireless.openWirelessCommunication": "打開無線通訊",
    "microbit.wireless.receiveWirelessMessage": "收到無線消息",
    "microbit.wireless.resetWirelessCommunication": "復位無線通訊",
    "microbit.wireless.sendWirelessMessage": "發送無線消息 [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "設置無線通訊頻道為 [CH]",
    "music.categoryName": "音樂",
    "music.changeTempo": "演奏速度改變 [TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦加鼓",
    "music.drumCabasa": "(15) 鐵沙鈴",
    "music.drumClaves": "(9) 梆子",
    "music.drumClosedHiHat": "(6) 合起的腳踏鈸",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛鈴",
    "music.drumCrashCymbal": "(4) 碎音鈸",
    "music.drumCuica": "(18) 庫加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 拍掌",
    "music.drumOpenHiHat": "(5) 打開的腳踏鈸",
    "music.drumSideStick": "(3) 鼓邊敲擊",
    "music.drumSnare": "(1) 軍鼓",
    "music.drumTambourine": "(7) 鈴鼓",
    "music.drumTriangle": "(12) 三角鐵",
    "music.drumVibraslap": "(17) 振盪器",
    "music.drumWoodBlock": "(10) 木魚",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 貝斯",
    "music.instrumentBassoon": "(14) 低音管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 人聲合唱",
    "music.instrumentClarinet": "(10) 單簧管",
    "music.instrumentElectricGuitar": "(5) 電吉他",
    "music.instrumentElectricPiano": "(2) 電子琴",
    "music.instrumentFlute": "(12) 長笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 馬林巴",
    "music.instrumentMusicBox": "(17) 音樂盒",
    "music.instrumentOrgan": "(3) 風琴",
    "music.instrumentPiano": "(1) 鋼琴",
    "music.instrumentPizzicato": "(7) 撥奏",
    "music.instrumentSaxophone": "(11) 薩克斯風",
    "music.instrumentSteelDrum": "(18) 鋼鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 長號",
    "music.instrumentVibraphone": "(16) 顫音琴",
    "music.instrumentWoodenFlute": "(13) 木笛",
    "music.midiPlayDrumForBeats": "演奏節拍 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "演奏樂器設為 [INSTRUMENT]",
    "music.playDrumForBeats": "演奏節拍 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音階 [NOTE] [BEATS] 拍",
    "music.restForBeats": "演奏休息 [BEATS] 拍",
    "music.setInstrument": "演奏樂器設為 [INSTRUMENT]",
    "music.setTempo": "演奏速度設為 [TEMPO]",
    "pen.categoryName": "畫筆",
    "pen.changeColorParam": "筆跡 [COLOR_PARAM] 改變 [VALUE]",
    "pen.changeHue": "筆跡顏色改變 [HUE]",
    "pen.changeShade": "筆跡亮度改變 [SHADE]",
    "pen.changeSize": "筆跡寬度改變 [SIZE]",
    "pen.clear": "筆跡全部清除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "顏色",
    "pen.colorMenu.saturation": "彩度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "下筆",
    "pen.penUp": "停筆",
    "pen.setColor": "筆跡顏色設為 [COLOR]",
    "pen.setColorParam": "筆跡 [COLOR_PARAM] 設為 [VALUE]",
    "pen.setHue": "筆跡顏色設為 [HUE]",
    "pen.setShade": "筆跡亮度設為 [SHADE]",
    "pen.setSize": "筆跡寬度設為 [SIZE]",
    "pen.stamp": "蓋章",
    "speech.defaultWhenIHearValue": "開始吧",
    "speech.extensionName": "語音識別",
    "speech.listenAndWait": "收聽並等待",
    "speech.speechReporter": "語音文本",
    "speech.whenIHear": "當收到語音 [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "文字轉語音",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "低沉",
    "text2speech.kitten": "小貓",
    "text2speech.setLanguageBlock": "語言設為 [LANGUAGE]",
    "text2speech.setVoiceBlock": "語音設為 [VOICE]",
    "text2speech.speakAndWaitBlock": "唸出 [WORDS]",
    "text2speech.squeak": "尖細",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "翻譯",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "文字 [WORDS] 翻譯成 [LANGUAGE]",
    "translate.viewerLanguage": "瀏覽者的語言",
    "videoSensing.categoryName": "視訊偵測",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "動作",
    "videoSensing.off": "關閉",
    "videoSensing.on": "開啟",
    "videoSensing.onFlipped": "翻轉",
    "videoSensing.setVideoTransparency": "視訊透明度設為 [TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "[SUBJECT] 的視訊 [ATTRIBUTE]",
    "videoSensing.videoToggle": "視訊設為 [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "當視訊動作 > [REFERENCE]",
    "wedo2.getDistance": "距離",
    "wedo2.getTiltAngle": "傾斜角度 [TILT_DIRECTION]",
    "wedo2.isTilted": "傾斜 [TILT_DIRECTION_ANY]？",
    "wedo2.motorDirection.backward": "逆時針",
    "wedo2.motorDirection.forward": "順時針",
    "wedo2.motorDirection.reverse": "反轉",
    "wedo2.motorId.a": "馬達 A",
    "wedo2.motorId.all": "馬達 A 與 B",
    "wedo2.motorId.b": "馬達 B",
    "wedo2.motorId.default": "馬達",
    "wedo2.motorOff": "[MOTOR_ID] 停止",
    "wedo2.motorOn": "[MOTOR_ID] 啟動",
    "wedo2.motorOnFor": "[MOTOR_ID] 啟動 持續 [DURATION] 秒",
    "wedo2.playNoteFor": "演奏音階 [NOTE] 持續 [DURATION] 秒",
    "wedo2.setLightHue": "LED 顏色設為 [HUE]",
    "wedo2.setMotorDirection": "[MOTOR_ID] 方向設為 [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "[MOTOR_ID] 動力設為 [POWER]",
    "wedo2.tiltDirection.any": "任何",
    "wedo2.tiltDirection.down": "向下",
    "wedo2.tiltDirection.left": "向左",
    "wedo2.tiltDirection.right": "向右",
    "wedo2.tiltDirection.up": "向上",
    "wedo2.whenDistance": "當距離 [OP] [REFERENCE]",
    "wedo2.whenTilted": "當傾斜 [TILT_DIRECTION_ANY]"
  }
};
